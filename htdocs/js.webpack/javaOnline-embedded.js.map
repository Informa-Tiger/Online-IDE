{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","lexShiftLeft","lexShiftRight","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","superconstructorCallEnsured","scopeNode","stm","superConstructorCall","constructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","conditionType","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","updateWorkspaces","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","path","isFolder","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","window","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","elements","dontSortElements","addPanel","$newFolderAction","preventDefault","pathArray","getCurrentlySelectedPath","addFolder","newElement","newFolderCallback","addAction","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","selectedElement","getSelectedElement","name1","path1","name2","path2","nameWithPath1","nameWithPath2","compareWithPath","insertIndex","getElementIndex","prepend","$htmlFirstLine","elementAtIndex","$element","renderElement","insertElement","renameElement","$accordionDiv","close","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","element1","currentlyDraggedElement","moveElement","sort","b","aName","sortName","bName","cssClass","$div","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","pathIsCollapsed","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","libraries","libaries","Workspace","setAdditionalLibraries","restoreFromData","currentFileId","currentlyOpenModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","ischecked","$checkbox","$description","prop","is","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","alterAdditionalLibraries","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","loginRequest","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","showLoginForm","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","setAllHitpolygonsDirty","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","renderer","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","parseColorToOpenGL","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","screen","cX","cY","scaleX","scaleY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","sprite","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","scaleMode","Texture","Sprite","baseTexture","update","red","green","blue","hex","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","d1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","brt","BaseRenderTexture","LINEAR","RenderTexture","dob","renderTexture","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastPosX","lastPosY","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","setSpeedInStepsPerSecond","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhMJ,CAAYA,MAAS,KAmMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK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GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QAEvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7lB,UAAU6lB,QAAQ,IAAI,GAAJ,QACvB,EAAK7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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor){\r\n                if(currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0){\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if(method.isConstructor){\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if(firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            } \r\n\r\n        }\r\n\r\n        if(!hasConstructorWithParameters && this.baseClass != null){\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if(this.baseClass != null){\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for(let m1 of implementedMethods){\r\n                                if(m1.implements(m)){\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(!isImplemented){\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for(let m1 of implementedMethods){\r\n                        if(m1.implements(m)){\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(!isImplemented){\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound , staticClass: this};\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if(identifier == 'setCenter'){\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight(){\r\n        this.next(); // Consume first > of >>\r\n\r\n        if(this.nextChar == \">\"){\r\n            this.lexShiftRightUnsigned();\r\n        } else if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned(){\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft(){\r\n        this.next(); // Consume first < of <<\r\n\r\n        if(this.nextChar == '='){\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else{\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCallEnsured: boolean = false;\r\n            if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                let stm = methodNode.statements[0].statements;\r\n                if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n                    superconstructorCallEnsured = true;\r\n                }\r\n            } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n                superconstructorCallEnsured = true;\r\n            }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if(allStatements.length > programPosition){\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n    \r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null) {\r\n            return null;\r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, r);\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    forcedUpdatesInARow: number = 0;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate){\r\n                    this.forcedUpdatesInARow++;\r\n                    counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if(this.forcedUpdatesInARow > 50){\r\n                        counterTillForcedUpdate = this.forcedUpdateEvery * 50;\r\n                    }\r\n                } \r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n\r\n        if(this.main.user == null || this.main.user.is_testuser){\r\n            if(callback != null) callback();\r\n            return;\r\n        } \r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            \r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    if(this.main.workspacesOwnerId == this.main.user.id){\r\n                        that.updateWorkspaces(request, response);\r\n                    }\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false):Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if(path.length == 1 && path[0] == \"\") path = [];\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'down.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", () => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    currentlyDraggedElement: AccordionElement;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement|AccordionElement[]) => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray = this.getCurrentlySelectedPath();\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => { this.sortElements(); });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], name2: string, path2: string[]) {\r\n\r\n        let nameWithPath1 = path1.join(\"/\");\r\n        if (nameWithPath1 != \"\") nameWithPath1 += \"/\";\r\n        nameWithPath1 += name1;\r\n\r\n        let nameWithPath2 = path2.join(\"/\");\r\n        if (nameWithPath2 != \"\") nameWithPath2 += \"/\";\r\n        nameWithPath2 += name2;\r\n\r\n        return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[]): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, element.name, element.path) < 0) return i - 1;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path);\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n            jQuery(elementAtIndex).after(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        if(this.withFolders){\r\n            $ce.on('dragover', (event) => {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            })\r\n\r\n            $ce.on('dragleave', (event) => {\r\n                $ce.removeClass('jo_file_dragover');\r\n            })\r\n\r\n            $ce.on('drop', (event) => {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = that.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, bName, b.path);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = \" jo_expanded\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                    event.preventDefault();\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    event.preventDefault();\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                    let element1 = that.currentlyDraggedElement;\r\n                    if (element1 != null) {\r\n                        that.moveElement(element1, element);\r\n                    }\r\n                });\r\n            }\r\n\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('drag', (event) => {\r\n                that.currentlyDraggedElement = element;\r\n            })\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'down', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.hide();\r\n                        } else {\r\n                            e.$htmlFirstLine.show();\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuer Ordner...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$newFolderAction.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n            \r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for(let element of this.elements){\r\n                if(element.path.join(\"/\").startsWith(sourcePath)){\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for(let el of movedElements){\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n                this.renderElement(el);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for(let el of this.elements){\r\n\r\n                        if(pathString.startsWith(el.path.join(\"/\"))){\r\n                            if(el.isFolder){\r\n                                el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement){\r\n        let ps: string = ae.path.join(\"/\");\r\n        if(ae.isFolder){\r\n            if(ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            //@ts-ignore\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(!workspace.isFolder){\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if(that.main.workspacesOwnerId != null){\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n    \r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement|AccordionElement[]) => {\r\n            if(!Array.isArray(ae)) ae = [ae];\r\n            for(let a of ae){\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if(path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if(path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 0\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n                    jQuery('#main').css('visibility', 'visible');\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    user.is_testuser = loginRequest.username == \"Testuser\" && loginRequest.password == \"\";\r\n\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false,\r\n                                folderButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n                        \r\n                        if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                            \r\n                            Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n            \r\n                        }\r\n            \r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass():TimerClass{\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n        \r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if(this.worldHelper != null){\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null \r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n                this.gngEreignisbehandlungHelper?.detachEvents();\r\n                this.gngEreignisbehandlungHelper = null;\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n\r\n\r\n                // wh.stage.localTransform.translate(x,y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.stage.updateTransform();\r\n                wh.setAllHitpolygonsDirty();\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                    wh.stage.localTransform.identity();\r\n                    wh.stage.localTransform.translate(moveX, moveY);\r\n                    wh.stage.localTransform.prepend(matrix);\r\n\r\n\r\n                    // wh.stage.localTransform.translate(x,y);\r\n                    //@ts-ignore\r\n                    wh.stage.transform.onChange();\r\n                    wh.stage.updateTransform();\r\n                    wh.setAllHitpolygonsDirty();\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(angleRad);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n\r\n\r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => { \r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n\r\n\r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1/factor,x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n                wh.setAllHitpolygonsDirty();\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width/wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                } );\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n        \r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = width;\r\n        this.currentHeight = height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n        \r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n            \r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n        \r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n        \r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n        \r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if(this.module.main.pixiApp){\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.localTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.localTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = p2.x - p1.x;\r\n        this.currentHeight = p2.y - p1.y;\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                //@ts-ignore\r\n                if (this.interpreter.state == InterpreterState.running) {\r\n                    this.interpreter.timerStopped = false;\r\n                    this.interpreter.timerFunction(33.33, false, 0.08);\r\n                }\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n        this.stage.cacheAsBitmap = true;\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());            \r\n        }, 100);\r\n}\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        // this.app.destroy(true, { children: true, texture: false, baseTexture: false});\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if(this.lastMoveDx > 0){\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if(this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if(this.lastMoveDy > 0){\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if(this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if(pairs.length == 0){\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if(isStatic){\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if(index >= 0){\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;        \r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if(!this.hasOverlappingBoundingBoxWith(shapeHelper)){\r\n            return false;\r\n        } \r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if(x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height){\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string){\r\n        for(let child of this.shapes){\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i <= toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n        \r\n        if(copyFromOtherShape == null){\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width/2;\r\n            this.y = bounds.top + bounds.height/2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n            );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n        \r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for(let p of points){\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n         this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            for(let sh of shapeHelper.shapes){\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastPosX: number = -1;\r\n    lastPosY: number = -1;\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n        this.lastPosX = xStart;\r\n        this.lastPosY = yStart;\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n    }\r\n\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n        // console.log(\"MoveTo: \" + firstPoint.x + \", \" + firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear() {\r\n        this.lineElements = [];\r\n        this.lineElements.push({\r\n            x: 100,\r\n            y: 200,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.angle = 0;\r\n        this.borderColor = 0;\r\n        this.turtleSize = 40;\r\n        this.render();\r\n        this.drawTurtle(100, 200, 0);\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 33,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.private, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let p: PIXI.Point = new PIXI.Point(10, 10);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.private, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.private, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.private, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.private, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.private, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"größeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear();\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(10, 10, 12, \"Text\", module.main.getInterpreter(), o);\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGecklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n    \r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n\r\n        if(this.config.withBottomPanel == null){\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if(this.config.withBottomPanel){\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if(this.config.speed == null) this.config.speed = 9;\r\n        if(this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}