{"version":3,"file":"javaOnline-embedded.js","mappings":";yBAAA,IAAYA,GAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAlMJ,CAAYA,IAAAA,EAAS,KAqMd,ICzLKC,EAERC,EDuLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,sBAC1B,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","sources":["webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if(switchStatement.defaultDestination == null){\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                    case \"Robot\":\r\n                        if([\"pause\", \"warten\"].indexOf(method.identifier) >= 0){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { response } from \"express\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\n\nexport class FilledShapeDefaults {\n    static defaultFillColor: number = 0x8080ff;\n    static defaultFillAlpha: number = 1.0;\n\n    static defaultBorderColor: number = null;\n    static defaultBorderAlpha: number = 1.0;\n    static defaultBorderWidth: number = 10;\n\n    static defaultVisibility: boolean = true;\n\n    static initDefaultValues(){\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\n    \n        FilledShapeDefaults.defaultBorderColor = null;\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\n        FilledShapeDefaults.defaultBorderWidth = 10;\n\n        FilledShapeDefaults.defaultVisibility = true;\n    }\n\n    static setDefaultVisibility(visibility: boolean) {\n        FilledShapeDefaults.defaultVisibility = visibility;\n    }\n\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\n\n        FilledShapeDefaults.defaultBorderWidth = width;\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultBorderColor = c.color;\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultBorderColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\n        }\n\n    }\n\n    static setDefaultFillColor(color: string | number, alpha?: number) {\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultFillColor = c.color;\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultFillColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\n        }\n\n    }\n\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n        this.setBaseClass(objectType);\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(objectType);\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n    \n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 200;\r\n        let numberOfBatches = 10;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 100);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"workspace.json\");\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"names":["TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","Type","constructor","onlyFirstPass","usagePositions","Map","documentation","toTokenType","clearUsagePositions","this","PrimitiveType","initialValue","description","equals","type","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","Attribute","name","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","p","parameters","hasGenericTypes","implements","m","length","i","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","value","compute","firstOperand","secondOperand","castTo","computeId","s","map","tv","join","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","position","registerSwitchStatement","switchStatement","push","insertJumpNode","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","set","removeNode","n","indexOf","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","get","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","module","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","c","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","filterText","command","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","replace","pushStaticInitializationPrograms","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","error","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","Math","min","shouldImplement","checkInheritance","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","lengthAttribute","intPrimitiveType","referenceElement","array","destType","s1","ObjectClass","StringPrimitiveType","stringClass","forEach","init","doublePrimitiveType","booleanPrimitiveType","declaration","charPrimitiveType","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","floatPrimitiveType","negation","automatic","needsStatement","String","fromCharCode","trunc","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","match","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","red","green","blue","alpha","m2","m3","ColorHelper","static","predefinedColors","substr","CompilerStatus","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","t","pushError","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","Promise","resolve","deleteOverlappingRanges","e","e1","splice","delta","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","key","keys","cssColors","style","setProperty","highlightColor","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","parse","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","expect","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","getGraphicsDiv","showProgramEnd","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","sendUpdates","NetworkManager","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","DebuggerElement","caption","children","isOpen","getLevel","getIndent","render","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","$childContainer","removeAllChildren","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","code","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","evaluate","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","modules","toExportedModule","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","$div","addDiv","subHeading","placeholder","buttons","$buttonRow","button","waitMessage","$message","close","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","firstWorkspace","wse","text_before_revision","submitted_date","student_edited_after_revision","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","enabled","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","Helper","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","then","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","enable","disable","showData","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","registerAction","active","isActive","setActive","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","showNode","initGUI","printProgram","printModuleToBottomDiv","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","programHasMethodCalls","executeInStepMode","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","showTab","consoleTop","commandEntry","resultEntry","detachValues","ce","showError","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","clearErrors","clearExceptions","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","showHomeWorkRevisionButton","hideHomeworkRevisionButton","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","getCompiler","provideColorPresentations","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","resolveRenameLocation","currentlyEditedModule","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","setInterpreter","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","getSpeedInStepsPerSecond","stepsPerSecond","setSpeedInStepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","cbs","checkboxState","changed","newLibs","lib","used","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","helperHistory","repositoryButtonDone","stop","nonSystemModules","newFileHelperDone","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","setSize","adjustSizeAndElements","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","getRoutingRectangle","appendTo","withRaster","adjustToRaster","moveTo","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","alignment","bold","italics","$group","textPosYCm","maxWidthCm","center","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","$selectElement","selected","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","adjustWidthToWorld","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","Sliders","initSliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","getRightDiv","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","Interpreter","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","prototype","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","initEditor","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","gamepad","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","clearActorLists","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","getCollidingShapes","groupHelper","collidingShapes","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","groupHelperCopy","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","KeyClass","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","patch","patches","new","patchedText","KeyEvent","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","Float32Array","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","param","marke","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","BaseModule","GNGModule","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","getFirstModule","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","put","removeScript","getScript","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}