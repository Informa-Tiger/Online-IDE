{"version":3,"file":"javaOnline-embedded.js","mappings":";yBAAA,IAAYA,GAAZ,SAAYA,GACR,+BAEA,yCACA,mCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,wCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,IAAAA,EAAS,KAsMd,IC1LKC,EAERC,EDwLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,s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","sources":["webpack:///../src/client/compiler/lexer/Token.ts","webpack:///../src/client/compiler/types/Class.ts","webpack:///../src/client/compiler/types/Types.ts","webpack:///../src/client/interpreter/RuntimeObject.ts","webpack:///../src/client/compiler/parser/LabelManager.ts","webpack:///../src/client/compiler/types/Array.ts","webpack:///../src/client/compiler/types/ObjectClass.ts","webpack:///../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../src/client/compiler/lexer/Lexer.ts","webpack:///../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../src/client/compiler/lexer/ColorLexer.ts","webpack:///../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../src/client/compiler/Compiler.ts","webpack:///../src/client/main/gui/Formatter.ts","webpack:///../src/client/main/gui/ThemeManager.ts","webpack:///../src/client/compiler/parser/SymbolTable.ts","webpack:///../src/client/compiler/types/Enum.ts","webpack:///../src/client/compiler/parser/CodeGenerator.ts","webpack:///../src/client/compiler/parser/Parser.ts","webpack:///../src/client/compiler/types/TypeTools.ts","webpack:///../src/client/compiler/parser/TypeResolver.ts","webpack:///../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../src/client/compiler/types/TypeHelper.ts","webpack:///../src/client/runtimelibrary/collections/Collection.ts","webpack:///../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../src/client/runtimelibrary/collections/List.ts","webpack:///../src/client/runtimelibrary/collections/Stack.ts","webpack:///../src/client/runtimelibrary/collections/Vector.ts","webpack:///../src/client/runtimelibrary/collections/Set.ts","webpack:///../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../src/client/runtimelibrary/collections/Queue.ts","webpack:///../src/client/runtimelibrary/collections/Deque.ts","webpack:///../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../src/client/runtimelibrary/Console.ts","webpack:///../src/client/main/gui/PrintManager.ts","webpack:///../src/client/interpreter/InputManager.ts","webpack:///../src/client/communication/AjaxHelper.ts","webpack:///../src/client/communication/NotifierClient.ts","webpack:///../src/client/tools/database/CacheManager.ts","webpack:///../src/client/communication/NetworkManager.ts","webpack:///../src/client/interpreter/DebuggerElement.ts","webpack:///../src/client/tools/StringTools.ts","webpack:///../src/client/tools/HtmlTools.ts","webpack:///../src/client/compiler/AdhocCompiler.ts","webpack:///../src/client/interpreter/Evaluator.ts","webpack:///../src/client/workspace/Workspace.ts","webpack:///../src/client/main/gui/Dialog.ts","webpack:///../src/client/main/gui/WorkspaceImporter.ts","webpack:///../src/client/main/gui/Accordion.ts","webpack:///../src/client/interpreter/WatcherElement.ts","webpack:///../src/client/interpreter/Debugger.ts","webpack:///../src/client/tools/SoundTools.ts","webpack:///../src/client/main/gui/ActionManager.ts","webpack:///../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../src/client/main/gui/console/MyConsole.ts","webpack:///../src/client/main/gui/ErrorManager.ts","webpack:///../src/client/main/gui/HomeworkManager.ts","webpack:///../src/client/main/gui/BottomDiv.ts","webpack:///../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../src/client/compiler/types/DeclarationHelper.ts","webpack:///../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../src/client/main/gui/MyHoverProvider.ts","webpack:///../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../src/client/main/gui/MyReferenceProvider.ts","webpack:///../src/client/main/gui/MyColorProvider.ts","webpack:///../src/client/main/gui/Editor.ts","webpack:///../src/client/main/gui/MyJava.ts","webpack:///../src/client/main/gui/UserMenu.ts","webpack:///../src/client/main/gui/MainMenu.ts","webpack:///../src/client/main/gui/SpeedControl.ts","webpack:///../src/client/main/gui/ProgramControlButtons.ts","webpack:///../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../src/client/main/gui/ProjectExplorer.ts","webpack:///../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../src/client/main/gui/diagrams/Diagram.ts","webpack:///../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../src/client/interpreter/Interpreter.ts","webpack:///../src/client/tools/ConvexHull.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../src/client/main/gui/RightDiv.ts","webpack:///../src/client/main/gui/Sliders.ts","webpack:///../src/client/main/gui/TeacherExplorer.ts","webpack:///../src/client/main/Login.ts","webpack:///../src/client/main/gui/ViewModeController.ts","webpack:///../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../src/client/main/gui/WindowStateManager.ts","webpack:///../src/client/workspace/InconsistencyFixer.ts","webpack:///../src/client/main/Main.ts","webpack:///../src/client/main/gui/Helper.ts","webpack:///../src/client/tools/KeyboardTool.ts","webpack:///../src/client/tools/GamepadTool.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../src/client/runtimelibrary/graphics/World.ts","webpack:///../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../src/client/tools/MatheTools.ts","webpack:///../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../src/client/runtimelibrary/graphics/Color.ts","webpack:///../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../src/client/runtimelibrary/graphics/Group.ts","webpack:///../src/client/runtimelibrary/graphics/Key.ts","webpack:///../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../src/client/runtimelibrary/graphics/Text.ts","webpack:///../src/client/runtimelibrary/Input.ts","webpack:///../src/client/runtimelibrary/Gamepad.ts","webpack:///../src/client/runtimelibrary/Math.ts","webpack:///../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../src/client/runtimelibrary/System.ts","webpack:///../src/client/runtimelibrary/SystemTools.ts","webpack:///../src/client/runtimelibrary/Timer.ts","webpack:///../src/client/runtimelibrary/collections/Map.ts","webpack:///../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../src/client/runtimelibrary/graphics/Line.ts","webpack:///../src/client/runtimelibrary/Vector2.ts","webpack:///../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../src/client/runtimelibrary/Random.ts","webpack:///../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../src/client/compiler/parser/Patcher.ts","webpack:///../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../src/client/tools/database/DatabaseTool.ts","webpack:///../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../src/client/runtimelibrary/database/Connection.ts","webpack:///../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../src/client/compiler/parser/Module.ts","webpack:///../src/client/embedded/EmbeddedSlider.ts","webpack:///../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../src/client/embedded/MainEmbedded.ts","webpack:///../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if(attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object?.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\n\n\nexport class LongClass extends Klass {\n\n    unboxableAs = [];\n\n    constructor(baseClass: Klass) {\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\n        this.baseClass = baseClass;\n\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n    }\n\n    canCastTo(type: Type): boolean{\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\n    }\n\n    init() {\n\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = parameters[1].value;\n\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\n\n        this.addMethod(new Method(\"Long\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                parameters[0].value = Number.parseInt(parameters[1].value);\n\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\n\n\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                let v0 = parameters[0].value;\n                let v1 = parameters[1].value;\n                if (v0 > v1) return 1;\n                if (v0 < v1) return -1;\n                return 0;\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\n\n        this.addMethod(new Method(\"equals\", new Parameterlist([\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n                return parameters[0].value == parameters[1].value;\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return \"\" + parameters[0].value;\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\n        ]), longPrimitiveType,\n            (parameters) => {\n                return parameters[0].value;\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\n\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\n\n        this.addMethod(new Method(\"signum\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), longPrimitiveType,\n            (parameters) => {\n                return Math.sign(parameters[1].value);\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\n\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(2);\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(16);\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(8);\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value).toString();\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\n\n        this.addMethod(new Method(\"toString\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), stringPrimitiveType,\n            (parameters) => {\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return parameters[1].value;\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\n\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), this,\n            (parameters) => {\n                return Number.parseInt(parameters[1].value, parameters[2].value);\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\n\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\n\n    }\n\n    public debugOutput(value: Value): string {\n        return \"\" + <number>value.value;\n    }\n\n\n}\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor, TokenType.keywordWhile].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if(switchStatement.defaultDestination == null){\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                    case \"Robot\":\r\n                        if([\"pause\", \"warten\"].indexOf(method.identifier) >= 0){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"set\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let element: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.set(index, element);\r\n\r\n            }, false, false, \"Ersetzt das Element an Position index der Liste durch das übergebene Element; gibt das vorherige Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\", \"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => { }, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if (object.intrinsicData[\"ListHelper\"] instanceof ListHelper) {\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => { return { type: v.type, value: v.value } }));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if (getIteratorMethod == null) {\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if (getIteratorMethod.invoke) {\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{ value: object, type: object.class }]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (hasNextMethod.invoke([iteratorAsValue])) {\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{ value: object, type: object.class }]);\r\n            if (iteratorWithError.error != null) { this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false; }\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (true) {\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if (hasNext.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false; }\r\n                if (hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if (objWithError.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false; }\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({ value: obj, type: type });\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): { error: string, value: Value } {\r\n        if (method.invoke) {\r\n            return { value: { value: method.invoke([]), type: method.returnType }, error: null };\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if (index == null) {\r\n            this.valueArray.push({ type: r.type, value: r.value });\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if (index <= this.objectArray.length && index >= 0) {\r\n                this.valueArray.splice(index, 0, { type: r.type, value: r.value });\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    set(index: number, r: Value): boolean {\r\n        if (index < this.objectArray.length && index >= 0) {\r\n            let oldValue = this.objectArray[index];\r\n            this.valueArray[index] = { type: r.type, value: r.value };\r\n            this.objectArray[index] = r.value;\r\n            return oldValue;\r\n        } else {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n\r\n    removeLast_or_error() {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({ type: object.type, value: object.value });\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, { type: object.type, value: object.value });\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","export class CacheManager {\n    \n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\n        if(databaseId == null){callback(null); return;}\n        let that = this;\n        if(!this.cacheAvailable()) callback(null);\n        this.getCache((cache) => {\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\n                (value)=>{\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\n                })\n                .catch(() => callback(null));\n        })        \n    }\n\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\n        if(!this.cacheAvailable()) return;\n        let that = this;\n        this.getCache((cache) => {\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\n        })        \n    }\n\n    cacheAvailable(): boolean {\n        return 'caches' in self;\n    }\n\n    getCache(callback: (cache: Cache) => void) {\n        caches.open('my-cache').then(callback);\n    }\n\n    databaseIdToCacheIdentifier(databaseId: number): string {\n        return \"/onlineIdeTemplateDb\" + databaseId;\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    static getVolume: () => number = () => {return -1};\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init() {\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if (!SoundTools.isInitialized) {\r\n            SoundTools.isInitialized = true;\r\n            for (let sound of SoundTools.sounds) {\r\n                //@ts-ignore\r\n                sound.player = new Howl({ src: [praefix + sound.url], preload: true })\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string) {\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if (st != null) {\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n    static volumeDetectionRunning: boolean = false;\r\n    public static startDetectingVolume() {\r\n        if(SoundTools.volumeDetectionRunning) return;\r\n        SoundTools.volumeDetectionRunning = true;\r\n        console.log(\"starting...\");\r\n        //@ts-ignore\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        //@ts-ignore\r\n        if (navigator.getUserMedia) {\r\n            //@ts-ignore\r\n            navigator.getUserMedia({\r\n                audio: true\r\n            },\r\n                function (stream) {\r\n                    let audioContext = new AudioContext();\r\n                    let analyser = audioContext.createAnalyser();\r\n                    let microphone = audioContext.createMediaStreamSource(stream);\r\n\r\n                    analyser.smoothingTimeConstant = 0.8;\r\n                    analyser.fftSize = 1024;\r\n\r\n                    microphone.connect(analyser);\r\n\r\n                    SoundTools.getVolume = () => {\r\n                        if(!SoundTools.volumeDetectionRunning) return 0;\r\n                        var times = new Float32Array(analyser.frequencyBinCount);\r\n                        analyser.getFloatTimeDomainData(times);\r\n                        let volume = 0;\r\n                        for (let i = 0; i < times.length; i++) {\r\n                            volume += Math.abs(times[i]);\r\n                        }\r\n                        volume = volume / times.length;\r\n                        return volume;\r\n                    };\r\n                },\r\n                function (err) {\r\n                    console.log(\"The following error occured: \" + err.name)\r\n                });\r\n        } else {\r\n            console.log(\"getUserMedia not supported\");\r\n        }\r\n    }\r\n}\r\n\r\n","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"advanced\",\r\n            // renderWhitespace: \"boundary\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n            tabSize: 3,\r\n            insertSpaces: true,\r\n            detectIndentation: false,\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        let keysWhichDontStopProgram = [\"Arrow\", \"Page\", \"ControlLeft\", \"ControlRight\"];\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                console.log(e);\r\n\r\n                for(let kdp of keysWhichDontStopProgram){\r\n                    if(e.code.indexOf(kdp) >= 0) return;\r\n                }\r\n\r\n                if(e.code == \"KeyC\" && e.ctrlKey ) return;\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForDB, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch)=> ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput && this.state != InterpreterState.waitingForDB) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput(InterpreterState.waitingForInput);\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput(newState: InterpreterState){\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(newState);\r\n        if(newState == InterpreterState.waitingForInput){\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n    }\r\n    \r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false){\r\n        if(popPriorValue) this.stack.pop();\r\n        if(value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput, InterpreterState.waitingForDB];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch); \r\n    }\r\n\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\n\nexport class FilledShapeDefaults {\n    static defaultFillColor: number = 0x8080ff;\n    static defaultFillAlpha: number = 1.0;\n\n    static defaultBorderColor: number = null;\n    static defaultBorderAlpha: number = 1.0;\n    static defaultBorderWidth: number = 10;\n\n    static defaultVisibility: boolean = true;\n\n    static initDefaultValues(){\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\n    \n        FilledShapeDefaults.defaultBorderColor = null;\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\n        FilledShapeDefaults.defaultBorderWidth = 10;\n\n        FilledShapeDefaults.defaultVisibility = true;\n    }\n\n    static setDefaultVisibility(visibility: boolean) {\n        FilledShapeDefaults.defaultVisibility = visibility;\n    }\n\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\n\n        FilledShapeDefaults.defaultBorderWidth = width;\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultBorderColor = c.color;\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultBorderColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\n        }\n\n    }\n\n    static setDefaultFillColor(color: string | number, alpha?: number) {\n\n        if (typeof color == \"string\") {\n            let c = ColorHelper.parseColorToOpenGL(color);\n            FilledShapeDefaults.defaultFillColor = c.color;\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\n        } else {\n            FilledShapeDefaults.defaultFillColor = color;\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\n        }\n\n    }\n\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                return sh.collidesWithAnyShape(color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                let c = ColorHelper.parseColorToOpenGL(color);\r\n\r\n\r\n                return sh.collidesWithAnyShape(c.color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(color?: number): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"fillColor\"] && color != null) {\r\n                if (shapeHelper[\"fillColor\"] != color) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroupAndSetDefaultVisibility();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"getVolume\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n        (parameters) => {\r\n            if(!SoundTools.volumeDetectionRunning) SoundTools.startDetectingVolume();\r\n            return SoundTools.getVolume();\r\n        }    \r\n        , false, true, \"Gibt die aktuelle Mikrofonlautstärke zurück. Beim ersten Aufruf muss der Benutzer dem Browser die Erlaubnis zur Benutzung des Mikrofons geben. Solange dies noch nicht erfolgt ist, gibt die Funktion den Wert -1 zurück.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                    indices.push(toIndex);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            //@ts-ignore\r\n            this.textStyle.align = this.alignment;\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput || this.interpreter.state == InterpreterState.waitingForDB) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"Ausführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"Taste(char)\", \"TasteGedrückt(char)\", \n    \"SonderTaste(int)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"Ausführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"Taste(char)\": \"taste\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTaste(int)\": \"sondertaste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n        this.setBaseClass(objectType);\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();  \n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(objectType);\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200).\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur so, dass der Blickwinkel der Figur in die angegebene Richtung zeigt. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Figur zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Entfernt die Figur aus dem Zeichenfenster\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n    \n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element und fügt es der Figur hinzu.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Bewegt den \"Cursor\" zum nächsten Datensatz und gibt genau dann true zurück, wenn noch ein Datensatz da ist.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.size();\r\n\r\n            }, false, false, 'Gibt die Anzahl der Zeilen der Ergebnistabelle zurück.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        if(this.result == null) return false;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    size(): number {\r\n        return this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number, interpreter: Interpreter) {\r\n\r\n        if(this.cursor < 0) this.cursor = 0;\r\n\r\n        if(this.cursor >= this.result.values.length){\r\n            interpreter.throwException(\"Es wurde versucht, auf den \" + (this.cursor + 1) + \". Datensatz zuzugreifen, das ResultSet hat aber nur \" + this.result.values.length + \" Datensätze.\");\r\n            return null;\r\n        }\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\n\n    //@ts-ignore\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\n    db;\n    SQL;\n\n    onmessage: (event: {data: any}) => void;\n\n    onError: (event: ErrorEvent) => void;\n\n    postMessageToClient(message: any) {\n        this.onmessage({data: message})\n    }\n\n    postMessage(data: any){\n        let that = this;\n        if (that.db == null) {\n            that.initsql.then((SQL1) => {\n                that.SQL = SQL1;\n                that.db = createDb(SQL1, undefined);\n                that.worker(data);\n            }).catch((err) => {\n                console.log(err);\n                //@ts-ignore\n                return that.postMessageToClient({\n                    id: this[\"data\"][\"id\"],\n                    error: err[\"message\"]\n                });\n            })\n        } else {\n            that.worker(data);\n        }\n    }\n\n    terminate() {\n\n    }\n\n    worker(data: any) {\n        var buff; var result;\n        var config = data[\"config\"] ? data[\"config\"] : {};\n        try {\n            switch (data && data[\"action\"]) {\n                case \"open\":\n                    buff = data[\"buffer\"];\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        ready: true\n                    });\n                case \"exec\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    if (!data[\"sql\"]) {\n                        throw \"exec: Missing query string\";\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"],\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\n                    });\n                case \"each\":\n                    if (this.db === null) {\n                        this.db = createDb(this.SQL, undefined);\n                    }\n                    var callback = function callback(row) {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            row: row,\n                            finished: false\n                        });\n                    };\n                    var done = function done() {\n                        //@ts-ignore\n                        return this.postMessage({\n                            id: data[\"id\"],\n                            finished: true\n                        });\n                    };\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\n                case \"export\":\n                    buff = this.db[\"export\"]();\n                    result = {\n                        id: data[\"id\"],\n                        results: [\n                            {\n                                buffer: buff\n                            }\n                        ]\n                    };\n                    try {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    } catch (error) {\n                        //@ts-ignore\n                        return this.postMessageToClient(result);\n                    }\n                case \"close\":\n                    if (this.db) {\n                        this.db.close();\n                    }\n                    //@ts-ignore\n                    return this.postMessageToClient({\n                        id: data[\"id\"]\n                    });\n                default:\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\n            }\n\n        } catch (err) {\n\n            //@ts-ignore\n            return this.postMessageToClient({\n                id: data[\"id\"],\n                error: err[\"message\"]\n            });\n        }\n\n    }\n\n\n}\n\n\n\n\n\n","import { MainBase } from \"src/client/main/MainBase.js\";\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\n\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\n\nexport type DatabaseDirectoryEntry = {\n    name: string,\n    description: string,\n    filename: string\n}\n\nexport type QueryResult = {\n    columns: string[],\n    values: any[][],\n    buffer?: Uint8Array\n}\n\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\nexport type QueryErrorCallback = (error: string) => void;\n\nexport type ColumnStructure = {\n    name: string;\n    table: TableStructure;\n\n    typeLengths?: number[]; // for varchar(5), ...\n    completeTypeSQL: string;\n\n    references?: ColumnStructure;\n    referencesRawData?: any[];\n    isPrimaryKey: boolean;\n    isAutoIncrement: boolean;\n\n    notNull: boolean;\n    defaultValue: string;\n\n    dumpValueFunction?: (any) => string\n}\n\nexport type TableStructure = {\n    name: string;\n    size: number;\n    columns: ColumnStructure[];\n    completeSQL: string;\n}\n\nexport type DatabaseStructure = {\n    tables: TableStructure[]\n}\n\n\nexport class DatabaseTool {\n\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\n\n    worker: Worker;\n\n    queryId: number = 0;\n\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\n\n    databaseStructure: DatabaseStructure;\n\n    constructor(private main: MainBase){\n\n    }\n\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\n        \n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\n        \n            if (this.worker != null) {\n            this.worker.terminate();\n        }\n\n        let t = performance.now();\n\n        // console.log(\"Starting worker...\");\n\n        let url: string = \"js/tools/database/sqljsWorker.js\"\n        if(this.main.isEmbedded()){\n            //@ts-ignore\n            url = window.javaOnlineDir + url;\n        }\n\n        //@ts-ignore\n        if(window.jo_doc){\n            //@ts-ignore\n            this.worker = new WorkerSim();\n        } else {\n            this.worker = new Worker(url);\n        }\n        let that = this;\n\n        let error: string;\n\n        this.worker.onmessage = () => {\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\n            that.worker.onmessage = event => {\n\n                // console.log(event.data);\n\n                let id = event.data.id;\n                if (event.data.error == null) {\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\n                    if (querySuccessCallback != null) {\n                        querySuccessCallback(event.data.results);\n                    }\n                } else {\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\n                    if (queryErrorCallback != null) {\n                        queryErrorCallback(event.data.error);\n                    }\n                }\n\n                // if(event.data.buffer){\n                //     console.log(event.data.buffer);\n                // }\n\n\n                this.queryErrorCallbackMap.delete(id);\n                this.querySuccessCallbacksMap.delete(id);\n\n            };\n\n            if(queries == null) queries = [];\n            queries = queries.slice();\n            let queryCount = queries.length;\n\n            let execQuery = () => {\n                if (queries.length > 0) {\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\n                    let query = queries.shift();\n                    that.executeQuery(query, (result) => {\n                        execQuery();\n                    }, (error) => {\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\n                        console.log()\n                        execQuery();\n                    })\n                } else {\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\n                   \n                }\n            }\n\n            execQuery();\n\n        };\n\n        this.worker.onerror = (e) => {\n            error = (\"Worker error: \" + e.error);\n            console.log(\"Worker error: \" + e.error);\n        }\n\n        this.worker.postMessage({\n            id: that.queryId++,\n            action: \"open\",\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\n        });\n\n    }\n\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\n\n        let id = this.queryId++;\n\n        this.querySuccessCallbacksMap.set(id, successCallback);\n        this.queryErrorCallbackMap.set(id, errorCallback);\n\n        this.worker.postMessage({\n            id: id,\n            action: \"exec\",\n            sql: query,\n            params: {}\n        });\n\n    }\n\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\n\n        if(queries.length == 0){\n            successCallback()\n            return;\n        }\n\n        let query = queries.shift();\n\n        this.executeQuery(query, () => {\n            this.executeWriteQueries(queries, successCallback, errorCallback);\n        }, (message) => {\n            this.executeWriteQueries(queries, () => {}, (error) => {});\n            errorCallback(message); // report first error\n        });\n\n    }\n\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\n\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\n        let zlibMagicByte: number = 0x78;\n\n        let found: boolean = true;\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\n            if (sqliteMagicBytes[i] != dump[i]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) return \"binaryUncompressed\";\n\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\n\n        return \"other\";\n\n    }\n\n    close(){\n        if(this.worker != null){\n            this.worker.terminate();\n            this.worker = null;\n        }\n    }\n\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { ConnectionHelper } from \"./Connection.js\";\nimport { ResultsetHelper } from \"./ResultSet.js\";\n\n\nexport class DatabasePreparedStatementClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\n\n\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\n        ]), resultSetType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    module.main.getInterpreter().resumeAfterInput(null);\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.throwException(error);\n                    return null;\n                }\n\n\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    let rsh = new ResultsetHelper(result);\n                    let rs = new RuntimeObject(resultSetType);\n                    rs.intrinsicData[\"Helper\"] = rsh;\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\n            false));\n\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                let interpreter = module.main.getInterpreter();\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\n                    module.main.getInterpreter().resumeAfterInput(null);\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\n                    return null;\n                }\n\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\n\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\n\n                let error = psh.checkQuery();\n\n                if (error != null) {\n                    interpreter.resumeAfterInput(null);\n                    interpreter.throwException(error);\n                    return null;\n                }\n                \n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        interpreter.resumeAfterInput(null);\n                        interpreter.throwException(error);\n                        return;\n                    }\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\n                })\n\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\n            false));\n\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\n\n        for (let type of types) {\n\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\n\n\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\n            ]), voidPrimitiveType,\n                (parameters) => {\n\n                    let o: RuntimeObject = parameters[0].value;\n                    let index: number = parameters[1].value;\n                    let value: any = parameters[2].value;\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\n\n                    let error = psh.setValue(value, index);\n                    if (error != null) {\n                        module.main.getInterpreter().resumeAfterInput(null);\n                        module.main.getInterpreter().throwException(error);\n                    }\n\n                    return;\n\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\n        }\n    }\n\n}\n\n\nexport class PreparedStatementHelper {\n\n    parameterValues: string[];\n    parameterPositions: number[];\n    query: string;\n\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\n        this.query = query.trim();\n        this.prepareStatement(this.query);\n    }\n\n    prepareStatement(sql: string) {\n\n        let insideQuotation: boolean = false;\n        this.parameterPositions = [];\n\n        for (let i = 0; i < sql.length; i++) {\n\n            let c = sql.charAt(i);\n            switch (c) {\n                case \"'\": insideQuotation = !insideQuotation;\n                    break;\n                case \"?\": if (!insideQuotation) {\n                    this.parameterPositions.push(i);\n                }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        this.parameterValues = new Array(this.parameterPositions.length);\n\n    }\n\n    setValue(value: any, position: number): string {\n        if (position < 1 || position > this.parameterPositions.length) {\n            if (this.parameterPositions.length == 0) {\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\n            }\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\n        }\n\n        if(value == null){\n            this.parameterValues[position - 1] = \"null\";\n        } else\n        if (typeof value == \"string\") {\n            value = value.replace(/'/g, \"''\");\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\n        } else {\n            this.parameterValues[position - 1] = \"\" + value;\n        }\n        return;\n    }\n\n    checkQuery(): string {\n        return null;\n    }\n\n    getQueryWithParameterValuesFilledIn(): string {\n        let query = this.query;\n        let queryParts: string[] = [];\n        let pos = 0;\n\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\n            pos = this.parameterPositions[i] + 1;\n        }\n\n        if (pos < query.length) {\n            queryParts.push(query.substring(pos));\n        }\n\n        let queryWithParameterValues = \"\";\n        for (let i = 0; i < this.parameterPositions.length; i++) {\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\n        }\n\n        if (queryParts.length > this.parameterPositions.length) {\n            queryWithParameterValues += queryParts[queryParts.length - 1];\n        }\n\n        return queryWithParameterValues;\n    }\n\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null,results.length == 0 ? {columns: [], values: []} : results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').addClass('notranslate').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"names":["TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","linefeed","keywordList","EscapeSequenceList","Type","constructor","onlyFirstPass","usagePositions","Map","documentation","toTokenType","clearUsagePositions","this","PrimitiveType","initialValue","description","equals","type","getResultType","operation","secondOperandType","opTypeMap","operationTable","canCastTo","canCastToMap","getCastInformation","Attribute","name","updateValue","isStatic","visibility","isFinal","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","p","parameters","hasGenericTypes","implements","m","length","i","myParameter","mParameter","hasEllipsis","isEllipsis","getParameterType","index","getParameter","getReturnType","getParameterCount","getParameterList","getSignatureWithReturnParameter","getCompletionLabel","label","getTypeIdentifier","arrayOfType","getCompletionSnippet","leftBracketAlreadyThere","snippet","isVoidReturnDelta","debugOutput","value","compute","firstOperand","secondOperand","castTo","computeId","s","map","tv","join","RuntimeObject","klass","intrinsicData","class","initializeAttributeValues","getValue","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","object","baseClass","LabelManager","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","correctPositionsAfterInsert","insertPosition","insertedLength","ln","position","registerSwitchStatement","switchStatement","push","insertJumpNode","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","markJumpDestination","offset","labeledNode","set","removeNode","n","indexOf","newNode","registerJumpDestination","ntr","resolveNodes","noOp","jn","dest","get","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","module","typeVariables","isTypeVariable","typeVariablesReady","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","StaticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","getNonGenericClass","k","isGenericVariantFrom","getNonGenericIdentifier","implementsInterface","i1","getThisOrExtendedInterface","getImplementedInterface","i2","registerUsedSystemClasses","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","Interface","cda","multiples","ArrayType","getPostConstructorCallbacks","c","callbacks","concat","getCompletionItems","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","filterText","command","title","arguments","Method","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","replace","pushStaticInitializationPrograms","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","getMethodBySignature","setBaseClass","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasParameterlessConstructor","hasConstructorWithParameters","getParameterlessConstructor","getConstructor","parameterTypes","classIdentifier","constructors","findSuitableMethods","getMethodsThatFitWithCasting","searchConstructor","methodList","staticMethods","error","getMethod","getAttribute","foundButInvisible","attributeNotFound","baseClassAttribute","Math","min","shouldImplement","checkInheritance","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","hasAncestorOrIs","maxLength","private","clone","newKlass","Object","create","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","suits","mParameterType","givenType","mParameterTypeEllispsis","j","typeString","getVisibilityUpTo","objectType","currentClassContext","lengthAttribute","intPrimitiveType","referenceElement","array","destType","s1","ObjectClass","IntPrimitiveType","init","longPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","String","fromCharCode","trunc","StringPrimitiveType","stringClass","forEach","declaration","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","RegExp","match","strings","split","values","voidPrimitiveType","longConstant","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","getColorInfo","red","green","blue","alpha","m2","m3","ColorHelper","static","predefinedColors","substr","CompilerStatus","endChar","Lexer","colorLexer","spaceTokens","correspondingBracket","lex","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","d","foundToken","checkClosingBracket","openBracket","next","char","specialCharToken","pushToken","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","t","pushError","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","parseStringLiteralEscapeCharacter","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","Formatter","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","provideOnTypeFormattingEdits","model","ch","options","token","edits","format","Promise","resolve","deleteOverlappingRanges","e","e1","splice","delta","provideDocumentFormattingEdits","editor","EndOfLinePreference","LF","tokenlist","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","currentIndex","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","switchTheme","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","key","keys","cssColors","style","setProperty","highlightColor","SymbolTable","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","getImitation","imitation","st","maxStackPos","variable","stackPos","stackframeSize","getLocalVariableCompletionItems","completionItems","Snippet","Variable","findTableAtPosition","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","EnumRuntimeObject","en","enumValue","Enum","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","getOrdinal","valueIdentifier","enumInfo","enumObject","CodeGenerator","initStackFrameNodes","startAdhocCompilation","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","start","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","getInheritanceQuickFix","annotation","cie","signatureMap","cieType","editsProvider","uri","resource","edit","getSuperconstructorCalls","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","checkIfMethodIsVirtual","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","insertStatements","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","openBreakScope","openContinueScope","pushBreakNode","breakNode","pushContinueNode","continueNode","closeBreakScope","breakTargetLabel","lm","breakNodes","bn","closeContinueScope","continueTargetLabel","continueNodes","breakOccured","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","caseNodes","caseNode","caseTerm","info","ls","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","continueLabelIndex","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","Parser","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","parse","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","expect","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","isEnd","comesToken","getCurrentPosition","getEndOfCurrentToken","classDefinitions","oldPos","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","checkIfStatementHasNoEffekt","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","JsonTool","primitiveTypes","toJson","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","fromJson","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","TypeResolver","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","addFromJsonMethod","getInterpreter","addToJsonMethod","classesOrEnums","cn","mn","setupMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","Compiler","compilerStatus","compiledButNothingToRun","compile","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","MainEmbedded","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","ListIteratorImplClass","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","ArrayListClass","collectionInterface","typeA","tvA","listInterface","iteratorType","o","ah","ListHelper","getIterator","r","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","oldValue","peek","peek_last_or_null","peek_first_or_null","removeLast_or_error","addLast","addFirst","removeFirstOccurrence","peek_or_null","poll_or_null","removeFirst_or_error","CollectionClass","iterableInterface","IterableClass","IteratorClass","ListClass","StackClass","vectorType","VectorClass","SetClass","SetIteratorImplClass","MapHelper","SetIteratorHelper","SetHelper","console","log","adAll","addToSet","delete","HashSetClass","setInterface","mh","LinkedHashSetClass","QueueClass","DequeClass","QueueInterface","LinkedListClass","dequeInterface","ConsoleClass","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","getGraphicsDiv","showProgramEnd","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","InputManager","readInput","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","NotifierClient","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","disconnect","send","exception","sendUpdates","CacheManager","fetchTemplateFromCache","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","saveTemplateToCache","templateDump","put","Response","self","caches","open","NetworkManager","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","initializeTimer","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","initializeNotifierClient","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","sendCreateWorkspace","w","random","entity","sendCreateFile","sendDuplicateWorkspace","workspace_id","workspace","sendDistributeWorkspace","klasse","student_ids","class_id","sendSetSecret","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","sendCreateRepository","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendDeleteWorkspaceOrFile","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","fetchDatabaseAndToken","code","fetchDatabase","database","errormessage","cacheManager","based_on_template_id","pako","inflate","fetchTemplate","template","xhrFields","responseType","addDatabaseStatement","version_before","statements_before","new_version","rollbackDatabaseStatement","current_version","DebuggerElement","caption","children","isOpen","getLevel","getIndent","render","$debuggerElement","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","$childContainer","removeAllChildren","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","AdhocCompiler","ModuleStore","Module","resolvedTypeAndModule","codeGeneratorErrors","Evaluator","programMap","compiler","expression","pmEntry","compilation","evaluate","getDebugger","lastSymboltable","Workspace","evaluator","toExportedWorkspace","modules","toExportedModule","alterAdditionalLibraries","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","getModuleByMonacoModel","Dialog","$dialog","$dialogMain","heading","$div","addDiv","subHeading","placeholder","buttons","$buttonRow","button","waitMessage","$message","close","addCheckbox","ischecked","$checkbox","$description","prop","is","WorkspaceImporter","dialog","pathDescription","$fileInputButton","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","firstWorkspace","wse","text_before_revision","submitted_date","student_edited_after_revision","setWorkspaceActive","AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","setFixed","fixed","grow","enableNewButton","enabled","$buttonNew","getCurrentlySelectedPath","pathArray","selectedElement","getSelectedElement","compareWithPath","name1","path1","isFolder1","name2","path2","isFolder2","cmp","getElementIndex","insertElement","insertIndex","$elements","prepend","elementAtIndex","before","renderElement","renameElement","renderOuterHtmlElements","$accordionDiv","Helper","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","setTextAfterFilename","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","getPathString","ps","setElementClass","setCaption","Accordion","$html","panel","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","Debugger","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","enable","disable","showData","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","volumeDetectionRunning","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","smoothingTimeConstant","fftSize","getVolume","times","Float32Array","frequencyBinCount","getFloatTimeDomainData","volume","abs","err","ActionManager","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","registerAction","active","isActive","setActive","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","ProgramPrinter","$bottomDiv","$pcodeTab","showNode","initGUI","printProgram","printModuleToBottomDiv","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","ConsoleEntry","withBottomBorder","$consoleEntry","$firstLine","span","valueString","detachValue","MyConsole","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","initConsoleClearButton","$consoleClear","layout","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","programHasMethodCalls","executeInStepMode","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","showTab","consoleTop","commandEntry","resultEntry","detachValues","ce","showError","Main","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","clearErrors","clearExceptions","parents","ErrorManager","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","HomeworkManager","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","showHomeWorkRevisionButton","hideHomeworkRevisionButton","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","dispose","attachToWorkspaces","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","BottomDiv","programPrinter","homeworkManager","printCurrentlyExecutedModule","showHomeworkTab","hideHomeworkTab","showHideDbBusyIcon","displayValue","MyCompletionItemProvider","triggerCharacters","provideCompletionItems","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","MySignatureHelpProvider","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","provideSignatureHelp","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","MyHoverProvider","provideHover","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","provideCodeActions","diagnostics","isPreferred","MyReferenceProvider","provideReferences","referencePositions","upInCurrentModule","up","MyColorProvider","provideDocumentColors","getCompiler","provideColorPresentations","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","Editor","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","detectIndentation","keysWhichDontStopProgram","onKeyDown","not_initialized","kdp","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","setFontSize","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","resolveRenameLocation","currentlyEditedModule","rejectReason","provideRenameEdits","resourceEdits","usagePositionsInModule","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","MainMenu","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","SpeedControl","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","setInterpreter","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","getSpeedInStepsPerSecond","stepsPerSecond","setSpeedInStepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","ProgramControlButtons","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","WorkspaceSettingsDialog","currentLibraries","library","cbs","checkboxState","changed","newLibs","lib","used","ProjectExplorer","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","removeWorkspace","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","workspaceAccordionElement","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","restoreOwnWorkspaces","renderFiles","moduleList","renderWorkspaces","renderErrorCount","errorCount","errorCountS","showRepositoryButtonIfNeeded","helperHistory","repositoryButtonDone","stop","nonSystemModules","newFileHelperDone","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","showProgramPointerPosition","hideProgramPointerPosition","setExplorerColor","ZoomControl","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","DiagramUnitCm","Diagram","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","setSize","adjustSizeAndElements","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","insertStyleElement","styles","ns","defs","refreshInlineStyles","selector","stylesForSelector","textContent","findFreeSpace","radius","fertig","xCm","yCm","isFree","insideX","insideY","DiagramElement","lines","backgroundColor","getRoutingRectangle","appendTo","withRaster","adjustToRaster","moveTo","createTextElement","font","getTextMetrics","textElement","bbox","getBBox","cmPerPx","addTextLine","alignment","bold","italics","$group","textPosYCm","maxWidthCm","center","onClick","metrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","ClassBox","diagram","withMethods","withAttributes","attachToClass","isSystemClass","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","hasSignatureAndFileOf","ArrowHead","position1Cm","position2Cm","sqrt","ex","ey","DiagramArrow","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","ClassDiagram","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","clearAfterLogout","scd","classBoxes","workspaceId","classBox","deserialize","serializedClassDiagram","inactive","getClassBoxes","switchToWorkspace","cbs1","onlyUpdateIdentifiers","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","uscList1","usc","freePos","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","ListDiagram","objectDiagram","getSettingsElement","$selectElement","selected","rootIdentifier","getName","updateDiagram","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tExtends","tImplements","ObjectDiagram","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","currentTarget","intValue","updateSettings","$settingsDiv","RightDiv","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","adjustWidthToWorld","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isClassDiagramEnabled","isObjectDiagramEnabled","updateObjectDiagramSettings","Sliders","initSliders","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","TeacherExplorer","classData","removePanels","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","ea","renderStudents","userDataList","ud","classDataList","Login","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initViewMode","startupComplete","errorMessage","loginWithTicket","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","mode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","toggleHighContrast","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","InconsistencyFixer","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","getRightDiv","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","Interpreter","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","prototype","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","initEditor","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","KeyboardTool","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","unregisterListeners","kpc","isPressed","unsubscribeAllListeners","GamepadTool","gamepads","gamepad","axes","isGamepadButtonPressed","gamepadIndex","buttonIndex","gp","getGamepads","pressed","getGamepadAxisValue","axisIndex","isGamepadConnected","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","waitingForDB","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","stepInto","return","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","newState","oldState","popPriorValue","actionId","clearActorLists","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","registerDatabaseConnection","FilledShapeDefaults","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","WorldClass","groupType","shapeType","mouseListenerType","breite","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","WorldHelper","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","bind","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setAllHitpolygonsDirty","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","Actor","methodSignatures","actorListIdentifier","ActorHelper","isKeyDown","setTimerPaused","registerWorldType","testdestroyed","AlignmentClass","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","punkte","punkt","abstandPunktZuStrecke","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","l","punkte1","punkte2","istGeschlossen1","istGeschlossen2","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","ShapeClass","directionType","vector2Class","helper","sh","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","ShapeHelper","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","bringOnePlaneFurtherToFront","container","highestIndex","getChildIndex","setChildIndex","bringOnePlaneFurtherToBack","belongsToGroup","addToDefaultGroupAndSetDefaultVisibility","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","index1","getCollidingShapes","groupHelper","collidingShapes","getParentGroup","BitmapClass","colorType","pointsX","pointsY","rh","BitmapHelperNew","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","uploadData","baseTexture","update","intColorToHexRGB","setzeFarbeRGBA","g","getFarbe","getAlpha","FilledShapeClass","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgbaToHex","rgb","FilledShapeHelper","borderAlpha","fsh","CircleClass","mx","my","CircleHelper","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","SectorClass","startAngle","endAngle","SectorHelper","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ArcClass","ri","ra","ArcHelper","beginHole","endHole","r2","ColorClass","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","EllipseClass","rx","ry","EllipseHelper","setRadiusX","setRadiusY","drawEllipse","CollisionPairClass","GroupClass","collisionPairType","collisionPairArrayType","GroupHelper","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","doCache","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","KeyClass","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","PolygonClass","shapeClass","closeAndFill","pointsNumber","ph","PolygonHelper","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","setPoint","coordinates","setAllPointsUntransformed","RectangleClass","RectangleHelper","RepeatTypeClass","RoundedRectangleClass","RoundedRectangleHelper","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","ScaleModeClass","SoundKlass","startDetectingVolume","HitPolygonStore","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","SpriteClass","scaleModeClass","spriteLibraryEntry","SpriteHelper","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","setTileOffset","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","TileClass","tileScale","SpriteLibraryClass","SpriteLibrary","sle","TextClass","fontsize","TextHelper","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","InputClass","GamepadClass","MathClass","E","exp","log10","tan","asin","acos","atan","MathToolsClass","vectorArrayClass","xIndex","yIndex","returnArray","pVector","SystemClass","deltaTimeMillis","printStream","PrintStreamClass","SystemToolsClass","KeyListener","Runnable","TimerClass","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","MapClass","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","HashMapClass","TriangleClass","LocalDateTimeClass","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","DayOfWeekEnum","MonthEnum","LineClass","Vector2Class","alphaDeg","oRet","MouseListenerInterface","MouseAdapterClass","WebSocketClientClass","messageType","setUserData","getUserData","getterList","getter","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","WebSocketClass","webSocketClientType","systemClassType","WebSocketHelper","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","ProcessingClass","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","ProcessingHelper","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","TurtleClass","TurtleHelper","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","steckenzugSchneidetStreckenzug","touchesAtLeastOneFigure","touchesColor","farbe","touchesShape","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","GNGEreignisbehandlungHelper","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","unregisterEvents","onKeyDownMethod","invokeMethod","unshift","liste","GNGZeichenfensterClass","aktionsempfaengerType","aktionsempfaenger","GNGRechteckClass","GNGFarben","GNGBaseFigurClass","moveAnchor","grad","winkel","sichtbarkeit","GNGAktionsempfaengerInterface","GNGDreieckClass","GNGKreisClass","GNGTurtleClass","farbeString","objectShapeHelper","GNGTextClass","GNGFigurClass","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","RandomClass","bound","from","DirectionClass","Patcher","patch","patches","new","patchedText","KeyEvent","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","RobotCubeFactory","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","getBrick","getGrassBrick","getGrassPlane","mesh","makePlane","widthX","widthZ","spriteOrColor","getPlaneMaterial","getMarker","marker","getSidePlanes","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","getHorizontalPlanes","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","makeClouds","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","makeSprite3d","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","RobotClass","robotWorldType","RobotHelper","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","RobotWorldClass","RobotWorldHelper","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","adjustRobotPositions","robot","getBrickCount","markerColumn","brickColumn","northSprite","control","CameraOrbitControl","angles","oldHeight","brick","setToXY","adjustMarkerHeight","removeBrick","hasBrickColor","getMarkerColor","removeMarker","brickList","setDimensions","getNumberOfBricks","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","gibtFarbe","Direction","names","deltas","getAngle","getDeltas","fetchRobotWorld","Model","gltf","meshes","sm","crop","rw","newX","newY","param","marke","ResultSetClass","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","ResultsetHelper","columns","DatabaseStatementClass","resultSetType","query","connectionHelper","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","postMessageToClient","db","SQL1","SQL","createDb","worker","buff","results","exec","finished","DatabaseTool","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","initializeWorker","queries","callbackAfterInitializing","jo_doc","querySuccessCallback","queryErrorCallback","execQuery","shift","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","longPoll","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","DatabasePreparedStatementClass","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","ConnectionClass","preparedStatementType","statementType","stmt","ConnectionHelper","skipNextServerSentStatement","dbData","databaseData","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","retrieveLastRowId","oldStatementIndex","DatabaseManagerClass","connectionType","connectionRuntimeObject","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","BaseModule","GNGModule","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","getFirstModule","includeSystemModules","excludedModuleName","removeModuleWithFile","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","setColor","otherHeight","newOtherHeight","otherWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeAllFiles","removeFile","addHint","script","$fileDiv","hint","onDelete","setFirstFileActive","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","markFile","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","writeScript","scriptId","objectStore","removeScript","getScript","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","initWorkspace","$filesListDiv","configJson","hideEditor","withPCode","withErrorList","jsonFilename","eraseDokuwikiSearchMarkup","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","deleteScriptsInDB","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","EmbeddedStarter","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","load"],"sourceRoot":""}