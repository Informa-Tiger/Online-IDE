{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/LongClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/compiler/types/TypeHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../../src/client/tools/database/CacheManager.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShapeDefaults.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/Boxes3d.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/RobotCubeFactory.ts","webpack:///../../../../../src/client/runtimelibrary/graphics/3d/Robot.ts","webpack:///../../../../src/client/runtimelibrary/database/ResultSet.ts","webpack:///../../../../src/client/runtimelibrary/database/DatabaseStatement.ts","webpack:///../../../../src/client/tools/database/sqljsWorkerSim.ts","webpack:///../../../../src/client/tools/database/DatabaseTool.ts","webpack:///../../../../src/client/tools/database/DatabaseLongPollingListener.ts","webpack:///../../../../src/client/runtimelibrary/database/DatabasePreparedStatement.ts","webpack:///../../../../src/client/runtimelibrary/database/Connection.ts","webpack:///../../../../src/client/runtimelibrary/database/DatabaseManager.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","a","k","isGenericVariantFrom","i1","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","shouldImplement","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","equals","referenceElement","array","destType","castTo","s1","longPrimitiveType","floatPrimitiveType","doublePrimitiveType","negation","booleanPrimitiveType","automatic","needsStatement","charPrimitiveType","String","fromCharCode","trunc","stringClass","forEach","getResultType","declaration","charAt","localeCompare","caseFirst","sensitivity","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","pattern","regExp","RegExp","match","strings","split","values","compute","voidPrimitiveType","longConstant","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","parseInt","v0","v1","sign","toString","LongType","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","red","green","blue","alpha","m2","m3","ColorHelper","predefinedColors","substr","CompilerStatus","colorLexer","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","foundToken","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","splice","delta","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","mo","getModules","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","ec","elementCount","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","pc","insertNoOp","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","booleanOperators","betterOperators","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","setBaseClass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","collectionInterface","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","getIteratorMethod","iteratorWithError","execute","iterator","nextMethod","hasNextMethod","iteratorAsValue","objWithError","isInteger","executeImmediatelyInNewStackframe","oldValue","iterableInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","adAll","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","exception","sendUpdates","CacheManager","databaseId","cacheAvailable","getCache","cache","databaseIdToCacheIdentifier","then","arrayBuffer","buffer","Uint8Array","catch","templateDump","put","Response","self","caches","open","$updateTimerDiv","sqlIdeURL","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","code","fetchDatabase","database","errormessage","cacheManager","fetchTemplateFromCache","based_on_template_id","pako","inflate","fetchTemplate","template","saveTemplateToCache","xhrFields","responseType","version_before","statements_before","new_version","current_version","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","render","$childContainer","removeAllChildren","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","evaluator","toExportedModule","withFiles","currentFileId","currentlyOpenModule","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","libaries","restoreFromData","Dialog","$dialog","$dialogMain","$div","placeholder","buttons","$buttonRow","button","$message","ischecked","$checkbox","$description","prop","is","dialog","init","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","waitMessage","close","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","text_before_revision","submitted_date","student_edited_after_revision","sendCreateFile","setWorkspaceActive","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sound","sounds","player","Howl","src","preload","soundMap","play","volumeDetectionRunning","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","stream","audioContext","AudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","smoothingTimeConstant","fftSize","getVolume","times","Float32Array","frequencyBinCount","getFloatTimeDomainData","volume","abs","err","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","$firstLine","span","valueString","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","javaOnlineFont","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","ce","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","displayValue","triggerCharacters","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","getCompiler","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","detectIndentation","keysWhichDontStopProgram","onKeyDown","not_initialized","kdp","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertTextAndSetCursor","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","isSelected","charBefore","charAfter","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","rejectReason","resourceEdits","usagePositionsInModule","$userSettingsButton","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","convexhull","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","chr","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","objectDiagram","$selectElement","selected","rootIdentifier","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","disconnect","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","databaseConnectionHelpers","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","waitingForDB","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","pauseForInput","readInput","resumeAfterInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","newState","oldState","popPriorValue","counts1","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","constructor","defaultFillColor","defaultFillAlpha","defaultBorderColor","defaultBorderAlpha","defaultBorderWidth","defaultVisibility","parseColorToOpenGL","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","getDefaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","Container","sourceFrame","destinationFrame","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","hasRobot","robotWorldHelper","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","initDefaultValues","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a2","b1","b2","c1","c2","det","schneidet","abstand","streckenzugEnthältPunkt","punkte","punkt","abstandPunktZuStrecke","polygonEnthältPunkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","q","lambda","fx","fy","s2","abstandPunktZuGerade","polygonBerührtPolygonExakt","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setDefaultVisibility","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","belongsToGroup","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","initGraphics","addToDefaultGroupAndSetDefaultVisibility","bh","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setDefaultBorder","setDefaultFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","getParentGroup","oldIndex","groupHelperCopy","roCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChild","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","setPoints","insertPoint","movePointTo","isClosed","points1","coordinates","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","startDetectingVolume","polygon","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","isBold","isItalic","setStyle","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","lineJoin","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","getSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","alphaDeg","oRet","messageType","setUserData","getUserData","getterList","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","steckenzugSchneidetStreckenzug","farbe","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","drawInitialTriangle","groesse","newFactor","part","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patch","patches","new","patchedText","Boxes3d","material","Pixi3d","StandardMaterial","Mesh3D","createCube3dMesh","MeshGeometry3D","positions","normals","uvs","tangents","createHalfheightCube3dMesh","repeatTextureU","repeatTextureV","createPlane3dMesh","getSpritesheetTexture","wrapMode","WRAP_MODES","REPEAT","StandardMaterialTexture","smt","TextureTransform","frame","RobotMarker","geometry","RobotBrick","camera","farben","farbeToColorInfoMap","farbeToMarkerMaterialMap","farbeToBrickMaterialMap","planeMaterial","light1","Light","LightType","ambient","intensity","light2","directional","rotationQuaternion","setEulerAngles","lightingEnvironment","LightingEnvironment","lights","grassBrickMaterial","initMaterial","baseColorTexture","cloudMaterial","baseColor","groundPlaneMaterial","brickMaterial","mesh","widthX","widthZ","spriteOrColor","getPlaneMaterial","marker","worldX","worldY","sideSprite","deep","planes","sideMaterial","mesh1","mesh2","mesh3","mesh4","topSprite","topMaterial","mesh5","mesh6","mesh7","mesh8","originX","originZ","z1","createCube3d","scaleZ","dz","exposure","roughness","spriteKey","textureKey","alphaMode","StandardMaterialAlphaMode","mask","createPlane3d","robotWorldType","startX","startY","initialeWelt","turnRight","adjustAngle","turnLeft","schritt","anzahl","hinlegen","markeLöschen","markeSetzen","aufheben","istWand","istZiegel","istMarke","himmelsrichtungen","hr","hatSteine","maxSteine","maximumHeight","addBrick","setMarker","bricks","robots","fetchWorld","Camera","robotCubeFactory","container3D","Container3D","initFromString","initWorldArrays","renderOrnamentsAndInitCamera","robot","getBrickCount","markerColumn","brickColumn","getGrassPlane","getSidePlanes","makeClouds","makePlane","northSprite","makeSprite3d","control","CameraOrbitControl","angles","oldHeight","brick","getBrick","setToXY","adjustMarkerHeight","adjustRobotPositions","getMarker","brickList","initString","lowerCaseCharToColor","upperCaseCharToColor","rows","maxColumns","row","rowLength","brickColor","markerColor","Direction","names","deltas","fetchRobotWorld","Model","gltf","meshes","sm","rw","crop","getNumberOfBricks","getAngle","getDeltas","newX","newY","gibtFarbe","removeBrick","removeMarker","param","hasBrickColor","marke","wasNull","typeIdFirstUppercase","columnIndex","rsh","columnCount","isAfterLast","columnLabel","getColumnIndex","columns","resultSetType","query","connectionHelper","showHideDbBusyIcon","executeQuery","rs","executeWriteStatement","WorkerSim","initsql","initSqlJs","locateFile","scriptDirectory","db","SQL1","SQL","createDb","worker","postMessageToClient","buff","results","exec","finished","databaseDirectoryEntries","queryId","querySuccessCallbacksMap","queryErrorCallbackMap","queries","callbackAfterInitializing","jo_doc","querySuccessCallback","queryErrorCallback","execQuery","shift","sql","params","executeWriteQueries","dump","sqliteMagicBytes","DatabaseLongPollingListener","onServerSentStatementsCallback","listenerIdentifier","resp","firstNewStatementIndex","newStatements","rollbackToVersion","longPoll","psh","checkQuery","getQueryWithParameterValuesFilledIn","PreparedStatementHelper","prepareStatement","insideQuotation","parameterPositions","parameterValues","queryParts","queryWithParameterValues","preparedStatementType","statementType","stmt","skipNextServerSentStatement","registerDatabaseConnection","fetchDatabaseAndToken","dbData","databaseData","initializeWorker","longPollingListener","onServerSentStatements","executeStatementsFromServer","firstStatementIndex","retrieveLastRowId","oldStatementIndex","addDatabaseStatement","rollbackDatabaseStatement","connectionType","connectionRuntimeObject","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","patched","f1","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","jsonFilename","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","divsWithScriptLists","$script","srcAttr","dws","initDiv","fetch","embeddedStarter","prefix","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+QClFrD,IAAYC,E,OAAZ,SAAYA,GACR,+BAEA,yCACA,mCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,wCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,6CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAnMJ,CAAYA,MAAS,KAsMd,IC1LKC,EAERC,EDwLOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,sBAC1B,CA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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    longConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        if(attributes == null) return \"{}\";\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object?.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                        if(mParameterType == stringPrimitiveType) howManyCastings += 0.5;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                        /**\r\n                         * Rechteck r; \r\n                         * GNGFigur f;\r\n                         * Bei f.berührt(r) gibt es eine Variante mit Parametertyp String (schlecht!) und\r\n                         * eine mit Parametertyp Object. Letztere soll genommen werden, also:\r\n                         */\r\n                         if(mParameterTypeEllispsis == stringPrimitiveType) howManyCastings += 0.5;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { LongClass } from \"./boxedTypes/LongClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface || type instanceof ArrayType);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"Long\": longPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class LongPrimitiveType extends IntPrimitiveType {\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"long\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.division]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"long\": booleanPrimitiveType, \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.XOR]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.ampersand]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRight]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"long\": longPrimitiveType, \"int\": longPrimitiveType, \"Long\": longPrimitiveType, \"Integer\": longPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: false, needsStatement: false },\r\n            \"long\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n            \"Long\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.longConstant;\r\n    }\r\n}\r\n\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"matches\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return <string>(parameters[0].value).match(regExp) != null;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert der Zeichenkette dem regulären Ausdruck (regex) entspricht.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n            // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n            // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n            // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n            // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var longPrimitiveType = new LongPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var LongType = new LongClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.longConstant]: longPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\uc2a0\", \" \");\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        if(this.currentChar == '\\r'){\r\n            this.next();\r\n        }\r\n\r\n        if(this.currentChar == '\\n'){\r\n            this.next();\r\n            this.line++;\r\n            this.column = 1;\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else \r\n            if(char == \"\\r\"){\r\n                this.next();\r\n            } else\r\n            if (char == \"\\n\"){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                this.line++;\r\n                this.column = 1;\r\n                this.next();\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, this.line, this.column, text.length + 2);\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt = TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { longPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class LongClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Long\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", longPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ long annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", longPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ long annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, longPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"long-wert\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Long\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Long-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen int-Wert um\"));\r\n        this.addMethod(new Method(\"longValue\", new Parameterlist([]), longPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Long-Objekt in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherLong\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen long-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseLong\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen long-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), longPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[2].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Long-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Long-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: longPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && [TokenType.newline, TokenType.keywordFor, TokenType.keywordWhile].indexOf(lastToken2.tt) < 0 && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordFor:\r\n                case TokenType.keywordWhile:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt == TokenType.leftBracket) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null || attribute.resolvedType == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: false,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null && this.lastStatement.type != TokenType.noOp) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                // default case\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n        }\r\n\r\n        if(switchStatement.defaultDestination == null){\r\n            withReturnStatement = false;\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    insertNoOp(position: TextPosition, stepFinished: boolean){\r\n        this.pushStatements({\r\n            type: TokenType.noOp,\r\n            position: position,\r\n            stepFinished: stepFinished\r\n        })\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let pc = this.currentProgram.statements.length;        \r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        if(this.currentProgram.statements.length == pc){\r\n            this.insertNoOp(node.scopeTo, false);\r\n        }\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                    case \"Robot\":\r\n                        if([\"pause\", \"warten\"].indexOf(method.identifier) >= 0){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let oldPos = this.pos;\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                    if(oldPos == this.pos){\r\n                        this.pushError(this.cct.value + \" wird hier nicht erwartet.\");\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"set\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let element: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.set(index, element);\r\n\r\n            }, false, false, \"Ersetzt das Element an Position index der Liste durch das übergebene Element; gibt das vorherige Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\", \"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => { }, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if (object.intrinsicData[\"ListHelper\"] instanceof ListHelper) {\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => { return { type: v.type, value: v.value } }));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if (getIteratorMethod == null) {\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if (getIteratorMethod.invoke) {\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{ value: object, type: object.class }]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (hasNextMethod.invoke([iteratorAsValue])) {\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{ value: object, type: object.class }]);\r\n            if (iteratorWithError.error != null) { this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false; }\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = { value: iterator, type: iterator.class };\r\n\r\n            while (true) {\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if (hasNext.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false; }\r\n                if (hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if (objWithError.error != null) { this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false; }\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({ value: obj, type: type });\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): { error: string, value: Value } {\r\n        if (method.invoke) {\r\n            return { value: { value: method.invoke([]), type: method.returnType }, error: null };\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if (index == null) {\r\n            this.valueArray.push({ type: r.type, value: r.value });\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if (index <= this.objectArray.length && index >= 0) {\r\n                this.valueArray.splice(index, 0, { type: r.type, value: r.value });\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    set(index: number, r: Value): boolean {\r\n        if (index < this.objectArray.length && index >= 0) {\r\n            let oldValue = this.objectArray[index];\r\n            this.valueArray[index] = { type: r.type, value: r.value };\r\n            this.objectArray[index] = r.value;\r\n            return oldValue;\r\n        } else {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n\r\n    removeLast_or_error() {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({ type: object.type, value: object.value });\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, { type: object.type, value: object.value });\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n                if (response.error != null) error = response.error;\r\n\r\n                if (error.indexOf(\"Not logged in\") >= 0) {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n                \r\n                console.log(\"Netzwerkfehler: \" + error);\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\r\nimport { NetworkManager } from \"./NetworkManager.js\";\r\n\r\ntype SubscriptionMessageFromClient = {\r\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\r\n    // 3 == \"keepalive request\"\r\n    token?: string   // when \"subscribe\"\r\n}\r\n\r\ntype SubscriptionMessageFromServer = {\r\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n}\r\n\r\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\r\n\r\nexport class NotifierClient {\r\n\r\n    connection: WebSocket;\r\n    state: NotifierState;\r\n\r\n    constructor(private main: Main, private networkManager: NetworkManager){\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.state = \"connecting\";\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: SubscriptionMessageFromClient = {\r\n                    command: 1,   // \"subscribe\"\r\n                    token: response.token\r\n                }\r\n\r\n                this.state = \"connected\";\r\n                this.sendIntern(JSON.stringify(request));\r\n\r\n            }\r\n\r\n            let that = this;\r\n            setTimeout(() => {\r\n                if(this.state != \"subscribed\"){\r\n                    this.networkManager.forcedUpdateEvery = 1;\r\n                    this.networkManager.counterTillForcedUpdate = 1;\r\n                }\r\n            }, 7000);\r\n\r\n        });\r\n    }\r\n\r\n    disconnect(){\r\n        let request: SubscriptionMessageFromClient = {\r\n            command: 2   // \"disconnect\"\r\n        }\r\n\r\n        this.state = \"connected\";\r\n        this.sendIntern(JSON.stringify(request));\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (this.state != \"disconnected\") {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.state = \"disconnected\";\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\r\n        switch (response.command) {\r\n            case 1: // Acknoledge Connection\r\n                this.state = \"subscribed\";\r\n                break;\r\n            case 2: // Notify\r\n                this.networkManager.sendUpdates(() => {}, true);\r\n                break;\r\n            case 3: // disconnect\r\n                this.state = \"disconnected\";\r\n                break;\r\n            case 4: // keep alive response\r\n                break;\r\n        }\r\n    }\r\n\r\n    onError(error: Event) {\r\n        console.log(\"Fehler beim Notifier-Websocket\");\r\n    }\r\n\r\n}","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse, GetDatabaseRequest, getDatabaseResponse, DatabaseData, GetTemplateRequest, ObtainSqlTokenRequest, ObtainSqlTokenResponse, JAddStatementRequest, JAddStatementResponse, JRollbackStatementRequest, JRollbackStatementResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\nimport { CacheManager } from \"../tools/database/CacheManager.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    // sqlIdeURL = \"http://localhost:6500/servlet/\";\r\n    sqlIdeURL = \"https://www.sql-ide.de/servlet/\";\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty || this.errorHappened) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    } else {\r\n                        let message: string = \"Fehler beim Senden der Daten: \";\r\n                        if(response[\"message\"]) message += response[\"message\"];\r\n                        console.log(message);\r\n                    }\r\n                }, (message: string) => {\r\n                    that.errorHappened = true;\r\n                    console.log(\"Fehler beim Ajax-call: \" + message)\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    fetchDatabaseAndToken(code: string, callback:(database: DatabaseData, token: string, error: string) => void){\r\n        let request: ObtainSqlTokenRequest = {code: code};\r\n\r\n        ajax(\"obtainSqlToken\", request, (response: ObtainSqlTokenResponse) => {\r\n            if (response.success) {\r\n                this.fetchDatabase(response.token, (database, error) => {\r\n                    callback(database, response.token, error);\r\n                })                \r\n            } else {\r\n                callback(null, null, response.message);\r\n            }\r\n        }, (errormessage) => {\r\n            callback(null, null, errormessage);\r\n        })\r\n    }\r\n\r\n    private fetchDatabase(token: string, callback: (database: DatabaseData, error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            token: token\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jGetDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                let database = response.database;\r\n                \r\n                cacheManager.fetchTemplateFromCache(database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (templateDump != null) {\r\n                        //@ts-ignore\r\n                        database.templateDump = pako.inflate(templateDump);\r\n                        callback(database, null);\r\n                        return;\r\n                    } else {\r\n                        if (database.based_on_template_id == null) {\r\n                            callback(database, null);\r\n                            return\r\n                        }\r\n                        this.fetchTemplate(token, (template) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                database.templateDump = pako.inflate(template);\r\n                                callback(database, null);\r\n                                return;\r\n                            } else {\r\n                                callback(null, \"Konnte das Template nicht laden.\");\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(null, \"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private fetchTemplate(token: string, callback: (template: Uint8Array) => void) {\r\n        let request: GetTemplateRequest = {\r\n            token: token\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: this.sqlIdeURL + \"jGetTemplate\",\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert(\"Konnte das Template nicht laden.\");\r\n                callback(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addDatabaseStatement(token: string, version_before: number, statements: string[], \r\n        callback: (statementsBefore: string[], new_version: number, message: string) => void){\r\n\r\n        let request: JAddStatementRequest = {\r\n            token: token,\r\n            version_before: version_before,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jAddDatabaseStatement\", request, (response: JAddStatementResponse) => {\r\n            callback(response.statements_before, response.new_version, response.message);\r\n        }, (message) => {callback([], 0, message)})\r\n\r\n\r\n    }\r\n    \r\n    public rollbackDatabaseStatement(token: string, current_version: number, \r\n        callback: (message: string) => void){\r\n\r\n        let request: JRollbackStatementRequest = {\r\n            token: token,\r\n            current_version: current_version\r\n        }\r\n\r\n        ajax(this.sqlIdeURL +  \"jRollbackDatabaseStatement\", request, (response: JRollbackStatementResponse) => {\r\n            callback(response.message);\r\n        })\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\n\r\nexport class WorkspaceImporter {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main, private path: string[] = []) {\r\n\r\n        this.dialog = new Dialog();\r\n        \r\n    }\r\n\r\n    show() {\r\n        let that = this;\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Workspace importieren\");\r\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\r\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\r\n        if(this.path.length  > 0){\r\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\r\n        }\r\n        this.dialog.description(pathDescription);\r\n\r\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\r\n        this.dialog.addDiv($fileInputButton);\r\n        \r\n        let exportedWorkspaces: ExportedWorkspace[] = [];\r\n        \r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\r\n        \r\n        let registerFiles = (files: FileList) => {\r\n            for (let i = 0; i < files.length; i++) {\r\n                let f = files[i];\r\n                var reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    let text: string = <string>event.target.result;\r\n                    if (!text.startsWith(\"{\")) {\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n                    \r\n                    let ew: ExportedWorkspace = JSON.parse(text);\r\n                    \r\n                    if(ew.modules == null || ew.name == null || ew.settings == null){\r\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\r\n                        return;\r\n                    }\r\n\r\n                    exportedWorkspaces.push(ew);\r\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\r\n\r\n                };\r\n                reader.readAsText(f);\r\n            }\r\n        }\r\n\r\n        $fileInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\r\n        this.dialog.addDiv($dropZone);\r\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\r\n\r\n\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            registerFiles(files);\r\n        })\r\n\r\n        this.dialog.addDiv($workspacePreviewDiv);\r\n\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => { this.dialog.close() }\r\n            },\r\n            {\r\n                caption: \"Importieren\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    \r\n                    let networkManager = this.main.networkManager;\r\n                    let projectExplorer = this.main.projectExplorer;\r\n\r\n                    let owner_id: number = this.main.user.id;\r\n                    if (this.main.workspacesOwnerId != null) {\r\n                        owner_id = this.main.workspacesOwnerId;\r\n                    }\r\n\r\n                    let count = 0;\r\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\r\n\r\n                    let firstWorkspace: Workspace;\r\n\r\n                    for(let wse of exportedWorkspaces){\r\n\r\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\r\n                        if(firstWorkspace == null) firstWorkspace = ws;\r\n                        ws.isFolder = false;\r\n                        ws.path = this.path.join(\"/\");\r\n                        ws.settings = wse.settings;\r\n                        this.main.workspaceList.push(ws);\r\n                        ws.alterAdditionalLibraries();\r\n\r\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\r\n                            count--;\r\n                            if (error == null) {\r\n                                projectExplorer.workspaceListPanel.addElement({\r\n                                    name: ws.name,\r\n                                    externalElement: ws,\r\n                                    iconClass: \"workspace\",\r\n                                    isFolder: false,\r\n                                    path: that.path\r\n                                }, true);\r\n\r\n                                for(let mo of wse.modules){\r\n                                    let f: File = {\r\n                                        name: mo.name,\r\n                                        dirty: false,\r\n                                        saved: true,\r\n                                        text: mo.text,\r\n                                        text_before_revision: null,\r\n                                        submitted_date: null,\r\n                                        student_edited_after_revision: false,\r\n                                        version: 1,\r\n                                        is_copy_of_id: null,\r\n                                        repository_file_version: null,\r\n                                        identical_to_repository_version: null\r\n                                    };\r\n                                    let m = new Module(f, this.main);\r\n                                    ws.moduleStore.putModule(m);\r\n                                    networkManager.sendCreateFile(m, ws, owner_id,\r\n                                        (error: string) => {\r\n                                            count--;\r\n                                            if (error == null) {\r\n                                                projectExplorer.workspaceListPanel.sortElements();\r\n                                                this.dialog.close();\r\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\r\n                                            } else {\r\n                                                alert('Der Server ist nicht erreichbar!');\r\n                    \r\n                                            }\r\n                                        });\r\n                                }\r\n\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n        \r\n                            }\r\n                        });\r\n\r\n\r\n\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    static getVolume: () => number = () => {return -1};\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init() {\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if (!SoundTools.isInitialized) {\r\n            SoundTools.isInitialized = true;\r\n            for (let sound of SoundTools.sounds) {\r\n                //@ts-ignore\r\n                sound.player = new Howl({ src: [praefix + sound.url], preload: true })\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string) {\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if (st != null) {\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n    static volumeDetectionRunning: boolean = false;\r\n    public static startDetectingVolume() {\r\n        if(SoundTools.volumeDetectionRunning) return;\r\n        SoundTools.volumeDetectionRunning = true;\r\n        console.log(\"starting...\");\r\n        //@ts-ignore\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n        //@ts-ignore\r\n        if (navigator.getUserMedia) {\r\n            //@ts-ignore\r\n            navigator.getUserMedia({\r\n                audio: true\r\n            },\r\n                function (stream) {\r\n                    let audioContext = new AudioContext();\r\n                    let analyser = audioContext.createAnalyser();\r\n                    let microphone = audioContext.createMediaStreamSource(stream);\r\n\r\n                    analyser.smoothingTimeConstant = 0.8;\r\n                    analyser.fftSize = 1024;\r\n\r\n                    microphone.connect(analyser);\r\n\r\n                    SoundTools.getVolume = () => {\r\n                        if(!SoundTools.volumeDetectionRunning) return 0;\r\n                        var times = new Float32Array(analyser.frequencyBinCount);\r\n                        analyser.getFloatTimeDomainData(times);\r\n                        let volume = 0;\r\n                        for (let i = 0; i < times.length; i++) {\r\n                            volume += Math.abs(times[i]);\r\n                        }\r\n                        volume = volume / times.length;\r\n                        return volume;\r\n                    };\r\n                },\r\n                function (err) {\r\n                    console.log(\"The following error occured: \" + err.name)\r\n                });\r\n        } else {\r\n            console.log(\"getUserMedia not supported\");\r\n        }\r\n    }\r\n}\r\n\r\n","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    showHideDbBusyIcon(visible: boolean){\r\n        let displayValue: string = visible ? \"block\" : \"none\";\r\n        jQuery(\".jo_db-busy\").css(\"display\", displayValue);\r\n    }\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null) || m.identifier.startsWith('onMouse') || m.identifier.startsWith('onKey')) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                { token: 'string3', foreground: 'ff0000' },\r\n\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            //@ts-ignore\r\n            fontFamily: window.javaOnlineFont == null ? \"Consolas, Roboto Mono\" : window.javaOnlineFont,\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"advanced\",\r\n            // renderWhitespace: \"boundary\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n            tabSize: 3,\r\n            insertSpaces: true,\r\n            detectIndentation: false,\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        let keysWhichDontStopProgram = [\"Arrow\", \"Page\", \"ControlLeft\", \"ControlRight\"];\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                console.log(e);\r\n\r\n                for(let kdp of keysWhichDontStopProgram){\r\n                    if(e.code.indexOf(kdp) >= 0) return;\r\n                }\r\n\r\n                if(e.code == \"KeyC\" && e.ctrlKey ) return;\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertTextAndSetCursor = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertTextAndSetCursor(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertTextAndSetCursor(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        } else if(text == '\"') {\r\n            //a: x| -> x\"|\"\r\n            //d: \"|x -> \"\"|x\r\n            //c: \"|\" -> \"\"\"\\n|\\n\"\"\"\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const selection = this.editor.getSelection();\r\n\r\n            const isSelected = selection.startColumn != selection.endColumn || selection.startLineNumber != selection.endLineNumber;\r\n\r\n            const line = model.getLineContent(position.lineNumber);\r\n            let doInsert: boolean = true;\r\n            let charBefore: string = \"x\";\r\n            if(position.column > 1){\r\n                charBefore = line.charAt(position.column - 3);\r\n            }\r\n            let charAfter: string = \"x\";\r\n            if(position.column - 1 < line.length){\r\n                charAfter = line.charAt(position.column - 1);\r\n            }\r\n\r\n            if(!isSelected){\r\n                if(charBefore != '\"'){\r\n                    insertTextAndSetCursor(position, '\"', position.lineNumber, position.column);\r\n                } else if(charAfter == '\"'){\r\n                    let pos1 = {...position, column: position.column + 1};\r\n                    insertTextAndSetCursor(pos1, '\\n\\n\"\"\"', position.lineNumber + 1, 1);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            // { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/\\.[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"\"\"/, 'string', '@string'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"\"\"/, 'string', '@pop'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n            \r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSpeedInStepsPerSecond(): number {\r\n        return this.interpreter.stepsPerSecond;\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (workspace != null && !workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\nimport { ConnectionHelper } from \"../runtimelibrary/database/Connection.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForDB, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n    databaseConnectionHelpers: ConnectionHelper[] = [];\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.databaseConnectionHelpers.forEach((ch)=> ch.close());\r\n        this.databaseConnectionHelpers = [];\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n            // Are there static Variables to initialize?\r\n            if (this.currentMethod == \"Hauptprogramm\") {\r\n                // No static variable initializers\r\n                this.return;\r\n            }\r\n        }\r\n        this.stepOverNestingLevel = 10000;\r\n        let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        let position = node.position;\r\n        let exception = this.nextStep();\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n            return;\r\n        }\r\n\r\n        if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n            this.stepOverNestingLevel = 0;\r\n            if (position != null) {\r\n                this.leaveLine = position.line;\r\n            } else {\r\n                this.leaveLine = -1;\r\n            }\r\n            this.start();\r\n        } else\r\n            //@ts-ignore\r\n            if (this.state == InterpreterState.done) {\r\n                this.main.hideProgramPointerPosition();\r\n            } else {\r\n                this.showProgramPointerAndVariables();\r\n                //@ts-ignore\r\n                if (this.state != InterpreterState.waitingForInput && this.state != InterpreterState.waitingForDB) {\r\n                    this.setState(InterpreterState.paused);\r\n                }\r\n            }\r\n\r\n    }\r\n\r\n    stepFinished: boolean = false;\r\n\r\n    nextStep(): string {\r\n\r\n        this.stepFinished = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!this.stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                this.stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.pauseForInput(InterpreterState.waitingForInput);\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    that.resumeAfterInput(value);\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                node.stepFinished = true;\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n\r\n    oldState: InterpreterState;\r\n    pauseForInput(newState: InterpreterState){\r\n        this.timerStopped = true;\r\n        this.additionalStepFinishedFlag = true;\r\n        this.oldState = this.state;\r\n        this.setState(newState);\r\n        if(newState == InterpreterState.waitingForInput){\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n    }\r\n    \r\n    resumeAfterInput(value: Value, popPriorValue: boolean = false){\r\n        if(popPriorValue) this.stack.pop();\r\n        if(value != null) this.stack.push(value);\r\n        this.main.hideProgramPointerPosition();\r\n        this.setState(InterpreterState.paused);\r\n        if (this.oldState == InterpreterState.running) {\r\n            this.start();\r\n        } else {\r\n            this.showProgramPointerAndVariables();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n        if (this.stepOverNestingLevel < 0 && this.currentProgram.statements[this.currentProgramPosition + 1].type == TokenType.jumpAlways) {\r\n            this.stepFinished = false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let counts1 = counts.slice();\r\n            let n = counts1.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts1, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput, InterpreterState.waitingForDB];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n    registerDatabaseConnection(ch: ConnectionHelper) {\r\n        this.databaseConnectionHelpers.push(ch); \r\n    }\r\n\r\n\r\n}","/* \r\n * Convex hull algorithm - Library (TypeScript)\r\n * \r\n * Copyright (c) 2020 Project Nayuki\r\n * https://www.nayuki.io/page/convex-hull-algorithm\r\n * \r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\r\n * If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n\r\n\r\n\r\nexport namespace convexhull {\r\n    \r\n    export interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\t// Returns a new array of points representing the convex hull of\r\n\t// the given set of points. The convex hull excludes collinear points.\r\n\t// This algorithm runs in O(n log n) time.\r\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tlet newPoints: Array<P> = points.slice();\r\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\r\n\t\treturn convexhull.makeHullPresorted(newPoints);\r\n\t}\r\n\t\r\n\t\r\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\r\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\r\n\t\tif (points.length <= 1)\r\n\t\t\treturn points.slice();\r\n\t\t\r\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\r\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\r\n\t\t// graphics convention. This doesn't affect the correctness of the result.\r\n\t\t\r\n\t\tlet upperHull: Array<P> = [];\r\n\t\tfor (let i = 0; i < points.length; i++) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (upperHull.length >= 2) {\r\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\r\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tupperHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tupperHull.push(p);\r\n\t\t}\r\n\t\tupperHull.pop();\r\n\t\t\r\n\t\tlet lowerHull: Array<P> = [];\r\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\r\n\t\t\tconst p: P = points[i];\r\n\t\t\twhile (lowerHull.length >= 2) {\r\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\r\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\r\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\r\n\t\t\t\t\tlowerHull.pop();\r\n\t\t\t\telse\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlowerHull.push(p);\r\n\t\t}\r\n\t\tlowerHull.pop();\r\n\t\t\r\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\r\n\t\t\treturn upperHull;\r\n\t\telse\r\n\t\t\treturn upperHull.concat(lowerHull);\r\n\t}\r\n\t\r\n\t\r\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\r\n\t\tif (a.x < b.x)\r\n\t\t\treturn -1;\r\n\t\telse if (a.x > b.x)\r\n\t\t\treturn +1;\r\n\t\telse if (a.y < b.y)\r\n\t\t\treturn -1;\r\n\t\telse if (a.y > b.y)\r\n\t\t\treturn +1;\r\n\t\telse\r\n\t\t\treturn 0;\r\n\t}\r\n\t\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box'); \r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            // if(e.shiftKey) key = \"shift+\" + key;\r\n            // if(e.ctrlKey) key = \"ctrl+\" + key;\r\n            // if(e.altKey) key = \"alt+\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            // if(that.main.isEmbedded && key == \" \"){\r\n            //     for(let kpc of that.keyPressedCallbacks){\r\n            //         kpc(key);\r\n            //     }    \r\n            // }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keyup\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { ColorHelper } from \"./ColorHelper.js\";\r\n\r\nexport class FilledShapeDefaults {\r\n    static defaultFillColor: number = 0x8080ff;\r\n    static defaultFillAlpha: number = 1.0;\r\n\r\n    static defaultBorderColor: number = null;\r\n    static defaultBorderAlpha: number = 1.0;\r\n    static defaultBorderWidth: number = 10;\r\n\r\n    static defaultVisibility: boolean = true;\r\n\r\n    static initDefaultValues(){\r\n        FilledShapeDefaults.defaultFillColor = 0x8080ff;\r\n        FilledShapeDefaults.defaultFillAlpha = 1.0;\r\n    \r\n        FilledShapeDefaults.defaultBorderColor = null;\r\n        FilledShapeDefaults.defaultBorderAlpha = 1.0;\r\n        FilledShapeDefaults.defaultBorderWidth = 10;\r\n\r\n        FilledShapeDefaults.defaultVisibility = true;\r\n    }\r\n\r\n    static setDefaultVisibility(visibility: boolean) {\r\n        FilledShapeDefaults.defaultVisibility = visibility;\r\n    }\r\n\r\n    static setDefaultBorder(width: number, color: string | number, alpha?: number) {\r\n\r\n        FilledShapeDefaults.defaultBorderWidth = width;\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultBorderColor = c.color;\r\n            FilledShapeDefaults.defaultBorderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultBorderColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultBorderAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n    static setDefaultFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            FilledShapeDefaults.defaultFillColor = c.color;\r\n            FilledShapeDefaults.defaultFillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            FilledShapeDefaults.defaultFillColor = color;\r\n            if (alpha != null) FilledShapeDefaults.defaultFillAlpha = alpha;\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getDefaultGroup\", new Parameterlist([\r\n        ]), groupType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return wh.getDefaultGroup();\r\n\r\n            }, false, false, 'Gibt die Gruppe zurück, zu der aktuell alle neuen Objekte automatisch hinzugefügt werden. Falls gerade keine defaultGroup festgelegt ist, wird null zurückgegeben.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    robotWorldHelper: any;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if ($jo_tabs.length == 0) {\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    if (this.interpreter.pauseUntil != null) {\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n\r\n            this.summedDelta = 0;\r\n\r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let hasRobot = this.robotWorldHelper != null;\r\n\r\n        this.mouseListenerShapes = [];\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            if (!hasRobot) {\r\n                this.app.renderer.render(this.stage, {\r\n                    renderTexture: rt,\r\n                    transform: transform\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.stage.children.forEach(c => c.destroy());\r\n                    this.stage.removeChildren();\r\n\r\n                    let sprite = new PIXI.Sprite(rt);\r\n                    sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n                    // debugger;\r\n                    // sprite.localTransform.translate(0, rt.height);\r\n                    //@ts-ignore\r\n                    sprite.transform.onChange();\r\n                    // this.stage.projectionTransform = new PIXI.Matrix().scale(1, -1).translate(0, this.currentHeight);\r\n                    this.stage.projectionTransform = new PIXI.Matrix();\r\n                    this.stage.addChild(sprite);\r\n\r\n                }, 300);\r\n            }\r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n\r\n        if (this.robotWorldHelper != null) {\r\n            this.robotWorldHelper.destroy();\r\n            this.robotWorldHelper = null;\r\n        }\r\n\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n\r\n        FilledShapeDefaults.initDefaultValues();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    getDefaultGroup(): RuntimeObject {\r\n        return this.defaultGroup?.runtimeObject;\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implementierung eines Timers) und onKeyTyped, onKeyUp usw. zur Entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function streckenzugEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n    for(let i = 0; i < punkte.length - 1; i++){\r\n        if(abstandPunktZuStrecke(punkte[i], punkte[i+1], punkt) < 0.000001){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function steckenzugSchneidetStreckenzug(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    for(let i = 0; i < punkte1.length - 1; i++){\r\n        for(let j = 0; j < punkte2.length - 1; j++){\r\n            if(streckeSchneidetStrecke(punkte1[i], punkte1[i+1], punkte2[j], punkte2[j+1])){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType, nullType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { Enum, EnumInfo } from \"../../compiler/types/Enum.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                return sh.collidesWithAnyShape(color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithFillColor\")) return;\r\n\r\n                let c = ColorHelper.parseColorToOpenGL(color);\r\n\r\n\r\n                return sh.collidesWithAnyShape(c.color);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit einem anderen Grafikobjekt der angegebenen Füllfarbe kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setDefaultVisibility\", new Parameterlist([\r\n            { identifier: \"visibility\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let visibility: boolean = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultVisibility(visibility);\r\n\r\n            }, false, true, 'Setzt den Standardwert für das Attribut \"visible\". Dieser wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt instanziert wird.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => { }, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, highestIndex);\r\n        } else {\r\n            container.setChildIndex(this.displayObject, highestIndex);\r\n        }\r\n    }\r\n\r\n    sendToBack() {\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.setChildIndex(this, 0);\r\n        } else {\r\n            let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n            container.setChildIndex(this.displayObject, 0);\r\n        }\r\n    }\r\n\r\n    addToDefaultGroupAndSetDefaultVisibility() {\r\n\r\n        this.displayObject.visible = FilledShapeDefaults.defaultVisibility;\r\n\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string | number) {\r\n        let c: number;\r\n        if (typeof color == 'string') {\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(color?: number): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for (let shapeHelper of this.worldHelper.shapes) {\r\n            if (this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"fillColor\"] && color != null) {\r\n                if (shapeHelper[\"fillColor\"] != color) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this[\"turtle\"]) {\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n\r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n\r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if (polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    getParentGroup(): RuntimeObject {\r\n        return this.belongsToGroup?.runtimeObject || null\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlX, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: string = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultBorder\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let width: number = parameters[1].value;\r\n                let color: number = parameters[2].value;\r\n                let alpha: number = parameters[3].value;\r\n\r\n                FilledShapeDefaults.setDefaultBorder(width, color, alpha);\r\n\r\n            }, false, true, 'Setzt Default-Eigenschaften des Randes. Sie werden nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color, alpha);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setDefaultFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let color: string = parameters[1].value;\r\n\r\n                FilledShapeDefaults.setDefaultFillColor(color);\r\n\r\n            }, false, true, 'Setzt die Default-Füllfarbe. Sie wird nachfolgend immer dann verwendet, wenn ein neues grafisches Objekt erstellt wird. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 256*256*rot + 256*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number;\r\n    fillAlpha: number;\r\n\r\n    borderColor: number;\r\n    borderAlpha: number;\r\n    borderWidth: number;\r\n\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.borderColor = FilledShapeDefaults.defaultBorderColor;\r\n        this.borderAlpha = FilledShapeDefaults.defaultBorderAlpha;\r\n        this.borderWidth = FilledShapeDefaults.defaultBorderWidth;\r\n\r\n        this.fillColor = FilledShapeDefaults.defaultFillColor;\r\n        this.fillAlpha = FilledShapeDefaults.defaultFillAlpha;\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if (alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class SectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let startAngle: number = parameters[4].value;\r\n                let endAngle: number = parameters[5].value;\r\n\r\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\r\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: boolean = parameters[1].value;\r\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"drawRadii\")) return;\r\n    \r\n                    sh.drawRadii = r;\r\n                    sh.render();\r\n    \r\n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if(angle < 0){\r\n                    angle += Math.ceil(-angle/360) * 360;\r\n                }\r\n\r\n                if(angle > 360){\r\n                    angle -= Math.trunc(angle/360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle/180*Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad/Math.PI*180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SectorHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\r\n            g.drawCircle(this.mx, this.my, this.r);\r\n        } else {\r\n            if(this.drawRadii){\r\n                g.moveTo(this.mx, this.my);\r\n            }\r\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\r\n            if(this.drawRadii){\r\n                g.lineTo(this.mx, this.my);\r\n            }\r\n        }\r\n        if(this.drawRadii){\r\n            g.closePath();\r\n        }\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        if (dx * dx + dy * dy <= this.r * this.r) {\r\n            let towPI = 2*Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if(normalizedStartAngle <= normalizedEndAngle){\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }  \r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class ArcClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let ri: number = parameters[3].value;\r\n                let ra: number = parameters[4].value;\r\n                let startAngle: number = parameters[5].value;\r\n                let endAngle: number = parameters[6].value;\r\n\r\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\r\n\r\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\r\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ri = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\r\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n                sh.ra = r;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\r\n\r\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\r\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setStartAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.startAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\r\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setEndAngle\")) return;\r\n\r\n                if (angle < 0) {\r\n                    angle += Math.ceil(-angle / 360) * 360;\r\n                }\r\n\r\n                if (angle > 360) {\r\n                    angle -= Math.trunc(angle / 360) * 360;\r\n                }\r\n\r\n                sh.endAngleRad = angle / 180 * Math.PI;\r\n                sh.render();\r\n\r\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\r\n\r\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.ri * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\r\n\r\n                return sh.ra * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getStartAngle\")) return;\r\n\r\n                return sh.startAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getEndAngle\")) return;\r\n\r\n                return sh.endAngleRad / Math.PI * 180;\r\n\r\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ArcHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public ri: number,\r\n        public ra: number,\r\n        public startAngleRad: number, public endAngleRad: number,\r\n        public drawRadii: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.startAngleRad + deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ra * Math.cos(alpha),\r\n                y: this.my + this.ra * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = this.endAngleRad - deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.ri * Math.cos(alpha),\r\n                y: this.my + this.ri * Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n\r\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\r\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\r\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\r\n            g.drawCircle(this.mx, this.my, this.ra)\r\n                .beginHole()\r\n                .drawCircle(this.mx, this.my, this.ri)\r\n                .endHole();\r\n        } else {\r\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\r\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\r\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\r\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\r\n        }\r\n\r\n        g.closePath();\r\n\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        let angle = Math.atan2(-dy, dx);\r\n\r\n        let r2 = dx * dx + dy * dy;\r\n\r\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\r\n            let towPI = 2 * Math.PI;\r\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\r\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\r\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\r\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\r\n            if (normalizedStartAngle <= normalizedEndAngle) {\r\n                return ret;\r\n            } else {\r\n                return !ret;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n            (<Klass>shapeType).addMethod(new Method(\"getParentGroup\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"getParentGroup\")) return;\r\n    \r\n                    return sh.getParentGroup();\r\n    \r\n                }, false, false, 'Gibt die Group zurück, in der sich das Grafikobjekt befindet, bzw. null, falls es in keiner Group ist.', false));\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    setChildIndex(sh: ShapeHelper, index: number) {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject;\r\n        container.setChildIndex(sh.displayObject, index);\r\n\r\n        let oldIndex = this.shapes.indexOf(sh.runtimeObject);\r\n        this.shapes.splice(oldIndex, 1);\r\n        this.shapes.splice(index, 0, sh.runtimeObject);\r\n}\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.add(roCopy);\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChild(shapeHelper.displayObject);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\nimport { polygonEnthältPunkt, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n            \r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n            this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let points: Value[] = parameters[1].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"addPoints\")) return;\r\n    \r\n                    let p: { x: number, y: number }[];\r\n    \r\n                    sh.setPoints(points.map(value => value.value));\r\n    \r\n                }, false, false, 'Löscht alle Punkte des Polygons und setzt komplett neue. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n                \r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(coordinates: number[]) {\r\n\r\n        this.hitPolygonInitial = [];\r\n        for(let i = 0; i < coordinates.length - 1; i += 2){\r\n            this.hitPolygonInitial.push({x: coordinates[i], y: coordinates[i+1]});\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.closeAndFill){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"./FilledShapeDefaults.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"getVolume\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n        (parameters) => {\r\n            if(!SoundTools.volumeDetectionRunning) SoundTools.startDetectingVolume();\r\n            return SoundTools.getVolume();\r\n        }    \r\n        , false, true, \"Gibt die aktuelle Mikrofonlautstärke zurück. Beim ersten Aufruf muss der Benutzer dem Browser die Erlaubnis zur Benutzung des Mikrofons geben. Solange dies noch nicht erfolgt ist, gibt die Funktion den Wert -1 zurück.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                    indices.push(toIndex);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        // let prefix = \"\";\r\n        // //@ts-ignore\r\n        // if (window.javaOnlineDir != null) {\r\n        //     //@ts-ignore\r\n        //     prefix = window.javaOnlineDir;\r\n        // }\r\n\r\n        // let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setStyle\", new Parameterlist([\r\n            { identifier: \"isBold\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"isItalic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let isBold: boolean = parameters[1].value;\r\n                let isItalic: boolean = parameters[2].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                sh.setStyle(isBold, isItalic);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\",\r\n            lineJoin: 'round'\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if (fontFamily != null) {\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n    }\r\n\r\n    setStyle(isBold: boolean, isItalic: boolean){\r\n        this.textStyle.fontWeight = isBold ? \"bold\" : \"normal\";\r\n        this.textStyle.fontStyle = isItalic ? \"italic\" : \"normal\";\r\n        this.render();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            //@ts-ignore\r\n            this.textStyle.align = this.alignment;\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if (this.text != null) {\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n\r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if (this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class GamepadClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"getSpeed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return module.main.getInterpreter().controlButtons.speedControl.getSpeedInStepsPerSecond();\r\n\r\n            }, false, true, \"Gibt die Ausführungsgeschwindigkeit in Steps pro Sekunde zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Polygon\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints([x1, y1, x2, y2]);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput || this.interpreter.state == InterpreterState.waitingForDB) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon, polygonEnthältPunkt, steckenzugSchneidetStreckenzug, streckenzugEnthältPunkt } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroupAndSetDefaultVisibility();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        if(shapeHelper. hitPolygonTransformed.length == 2 && !this.isFilled){\r\n            return steckenzugSchneidetStreckenzug(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        }\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n            this.render();\r\n        }\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        if(this.isFilled){\r\n            return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        } else {\r\n            return streckenzugEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\r\n\r\nexport type GNGAktionsempfaengerData = {\r\n    type: GNGAktionsempfaengerType,\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class GNGEreignisbehandlung extends Klass {\r\n\r\n    constructor(module: Module, private moduleStore: ModuleStore) {\r\n\r\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\r\n\r\n\r\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let helper = GNGEreignisbehandlung.getHelper(module);\r\n\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\r\n\r\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n        //         let groesse: number = parameters[1].value;\r\n\r\n\r\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\r\n\r\n            }, false, false, \"Zeitgeber starten.\", false));\r\n\r\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\r\n\r\n            }, false, false, \"Zeitgeber anhalten.\", false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n    }\r\n\r\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\r\n        let interpreter = module.main.getInterpreter();\r\n        if (interpreter.gngEreignisbehandlungHelper == null) {\r\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\r\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\r\n        }\r\n\r\n        return interpreter.gngEreignisbehandlungHelper;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class GNGEreignisbehandlungHelper {\r\n\r\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\r\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"Ausführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"Taste(char)\", \"TasteGedrückt(char)\", \r\n    \"SonderTaste(int)\", \"SonderTasteGedrückt(int)\"];\r\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\r\n        \"TaktImpulsAusführen()\": \"ausführen\",\r\n        \"Ausführen()\": \"ausführen\",\r\n        \"AktionAusführen()\": \"ausführen\",\r\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\r\n        \"Taste(char)\": \"taste\",\r\n        \"TasteGedrückt(char)\": \"taste\",\r\n        \"SonderTaste(int)\": \"sondertaste\",\r\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\r\n    };\r\n\r\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\r\n    keyToKeyCodeMap: { [key: string]: number } = {\r\n        \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n    }\r\n\r\n    // For gng library (Cornelsen-Verlag):\r\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\r\n\r\n    timerRunning: boolean = false;\r\n    taktdauer: number = 300;\r\n    remainingTime: number = 0;\r\n\r\n    onKeyDownMethod: (key: string) => void;\r\n\r\n    constructor(private module:Module){\r\n        for (let type of this.aktionsempfaengerTypes) {\r\n            this.aktionsempfaengerMap[type] = [];\r\n        }\r\n\r\n    }\r\n\r\n    hasAktionsEmpfaenger(): boolean {\r\n\r\n        for(let type of this.aktionsempfaengerTypes){\r\n            if(this.aktionsempfaengerMap[type].length > 0){\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n\r\n    registerEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let method: Method = klass.getMethodBySignature(ms);\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n                this.aktionsempfaengerMap[type].push({\r\n                    type: <GNGAktionsempfaengerType>type,\r\n                    method: method,\r\n                    runtimeObject: o\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unregisterEvents(o: RuntimeObject) {\r\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\r\n\r\n        for (let ms of this.methodSignatureList) {\r\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\r\n\r\n            this.aktionsempfaengerMap[type] =\r\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\r\n        }\r\n    }\r\n\r\n\r\n    bindEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n\r\n        this.onKeyDownMethod = (key: string) => {\r\n            if (key.length == 1) {\r\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\r\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\r\n                }\r\n            } else {\r\n                let keyCode = this.keyToKeyCodeMap[key];\r\n                if (keyCode != null) {\r\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\r\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\r\n\r\n        // this.startTimer();\r\n\r\n    }\r\n\r\n    detachEvents() {\r\n        let interpreter = this.module.main.getInterpreter();\r\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\r\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\r\n        this.stopTimer();\r\n    }\r\n\r\n\r\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        parameters = parameters.slice(0);\r\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\r\n\r\n        if (program != null) {\r\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke(parameters);\r\n        }\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        this.timerRunning = false;\r\n    }\r\n\r\n    startTimer() {\r\n\r\n        if (!this.timerRunning) {\r\n            this.timerRunning = true;\r\n            this.processTimerEntries();\r\n        }\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (!this.timerRunning) return;\r\n\r\n        let dt = 10;\r\n\r\n        this.remainingTime += dt;\r\n        if (this.remainingTime > this.taktdauer) {\r\n            this.remainingTime -= this.taktdauer;\r\n\r\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\r\n            for (let ae of liste) {\r\n\r\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, dt);\r\n\r\n    }\r\n\r\n    handleMouseClickedEvent(x: number, y: number) {\r\n        let parameters: Value[] = [\r\n            { type: intPrimitiveType, value: Math.round(x) },\r\n            { type: intPrimitiveType, value: Math.round(y) },\r\n            { type: intPrimitiveType, value: 1 }\r\n        ]\r\n\r\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\r\n        for (let ae of liste) {\r\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.unregisterEvents(aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.startTimer();\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.stopTimer();\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let dauer: number = parameters[1].value;\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.taktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                //@ts-ignore\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \r\n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","export var GNGFarben: {[identifier: string]: number} = {\r\n    \"weiß\": 0xffffff,\r\n    \"weiss\": 0xffffff,\r\n    \"rot\": 0xff0000,\r\n    \"grün\": 0x00ff00,\r\n    \"gruen\": 0x00ff00,\r\n    \"blau\": 0x0000ff,\r\n    \"gelb\": 0xffff00,\r\n    \"magenta\": 0xff00ff,\r\n    \"cyan\": 0x00ffff,\r\n    \"hellgelb\": 0xffff80,\r\n    \"hellgrün\": 0x80ff80,\r\n    \"hellgruen\": 0x80ff80,\r\n    \"orange\": 0xff8000,\r\n    \"braun\": 0x804000,\r\n    \"grau\": 0x808080,\r\n    \"schwarz\": 0x000000\r\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \r\n            let farbe = value.object.intrinsicData[\"Farbe\"];\r\n            value.value = farbe == null ? \"schwarz\" : farbe;\r\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterX()); \r\n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.getCenterY()); \r\n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\r\n\r\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\r\n                sh.displayObject.updateTransform();\r\n                sh.displayObject.transform.worldTransform.apply(p, p);\r\n        \r\n                sh.move(x - p.x, y - p.y);\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                o.intrinsicData[\"Farbe\"] = farbe;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Zerstört das Objekt.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGDreieckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \r\n            let breite = value.object.intrinsicData[\"Breite\"];\r\n            value.value = Math.round(breite); \r\n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\r\n\r\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \r\n            let höhe = value.object.intrinsicData[\"Höhe\"];\r\n            value.value = Math.round(höhe); \r\n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n\r\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\r\n                rh.centerXInitial = 60;\r\n                rh.centerYInitial = 60;\r\n\r\n                o.intrinsicData[\"Breite\"] = 100;\r\n                o.intrinsicData[\"Höhe\"] = 100;\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\r\n\r\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n                    let breite: number = parameters[1].value;\r\n                    let höhe: number = parameters[2].value;\r\n\r\n                    o.intrinsicData[\"Breite\"] = breite;\r\n                    o.intrinsicData[\"Höhe\"] = höhe;    \r\n\r\n                    breite /= sh.scaleFactor;\r\n                    höhe /= sh.scaleFactor;\r\n\r\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n    \r\n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\r\n                    sh.centerXInitial = 60;\r\n                    sh.centerYInitial = 10 + höhe/2;\r\n                    \r\n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\r\n    \r\n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\r\n    \r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGKreisClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \r\n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\r\n\r\n        this.setupAttributeIndicesRecursive();  \r\n\r\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\r\n\r\n                o.intrinsicData[\"Farbe\"] = \"rot\";\r\n                rh.setFillColor(0xff0000);\r\n\r\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\r\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n                let radius: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\r\n\r\n                sh.setRadius(radius);\r\n\r\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\nexport class GNGTurtleClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \r\n            let sh = value.object.intrinsicData[\"Actor\"];\r\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \r\n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\r\n\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \r\n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \r\n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\r\n                rh.borderWidth = 1;\r\n                rh.setShowTurtle(true);\r\n                rh.setBorderColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\r\n\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                helper.registerEvents(o);\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.turtleSize = größe;\r\n                sh.turn(0);\r\n\r\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.turn(grad);\r\n\r\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n\r\n                sh.forward(länge);\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftHeben\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"StiftSenken\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\r\n\r\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Löschen\")) return;\r\n\r\n                sh.clear(100, 200, 0);\r\n\r\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.moveTo(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                sh.moveTo(100, 200);\r\n\r\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.turn(winkel + sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                return Math.round(-sh.turtleAngleDeg);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\r\n\r\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\r\n\r\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesAtLeastOneFigure();\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                return sh.touchesColor(farbe);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.touchesShape(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\r\n\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { TextHelper } from \"../graphics/Text.js\";\r\n\r\nexport class GNGTextClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \r\n            let text = value.object.intrinsicData[\"Actor\"].text;\r\n            value.value = text; \r\n        }, false, Visibility.private, false, \"Angezeigter Text\"));\r\n\r\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \r\n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\r\n            value.value = Math.round(fontsize); \r\n        }, false, Visibility.private, false, \"Textgröße\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\r\n\r\n                rh.setFillColor(0);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let text: string = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextSetzen\")) return;\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\r\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n                let größe: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\r\n\r\n                sh.setFontsize(größe);\r\n\r\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size += 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size += 2;\r\n                }\r\n                else {\r\n                    size += 4;\r\n                }\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\r\n\r\n                let size = sh.fontsize;\r\n                if (size <= 10) {\r\n                    size -= 1;\r\n                }\r\n                else if (size <= 40) {\r\n                    size -= 2;\r\n                }\r\n                else {\r\n                    size -= 4;\r\n                }\r\n                if (size < 1) {\r\n                    size = 1;\r\n                }\r\n\r\n\r\n                sh.setFontsize(size);\r\n\r\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { GroupHelper } from \"../graphics/Group.js\";\r\nimport { GNGFarben } from \"./GNGFarben.js\";\r\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\r\nimport { CircleHelper } from \"../graphics/Circle.js\";\r\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\r\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\r\n\r\ntype GNGPoint = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport class GNGFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        let objectType = <Klass>moduleStore.getType(\"Object\").type;\r\n\r\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(objectType);\r\n\r\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\r\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\r\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\r\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\r\n\r\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\r\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].angle \r\n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\r\n\r\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \r\n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \r\n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\r\n\r\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \r\n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \r\n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                o.intrinsicData[\"isGNG\"] = true;\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\r\n                let rh = new FigurHelper(interpreter, o, helper);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                let center: GNGPoint = {\r\n                    x: 100,\r\n                    y: 200\r\n                };\r\n\r\n                o.intrinsicData[\"Center\"] = center;\r\n\r\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n                rh.scale(0.4, center.x, center.y);\r\n                rh.displayObject.updateTransform();\r\n\r\n                helper.registerEvents(o);\r\n\r\n\r\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\r\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let groesse: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                let newFactor = groesse / 100;\r\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Setzt die Größe der Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.rotate(grad, center.x, center.y);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\r\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let länge: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Gehen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                let angleRad = sh.angle / 180 * Math.PI;\r\n                let dx = länge * Math.cos(angleRad);\r\n                let dy = länge * Math.sin(-angleRad);\r\n                center.x += dx;\r\n                center.y += dy;                \r\n\r\n                sh.move(dx, dy);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(x - center.x, y - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = x;\r\n                center.y = y;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\r\n\r\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                sh.move(100 - center.x, 200 - center.y);\r\n                sh.displayObject.updateTransform();\r\n                center.x = 100;\r\n                center.y = 200;\r\n\r\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200).\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n                sh.displayObject.updateTransform();\r\n\r\n            }, false, false, \"Dreht die Figur so, dass der Blickwinkel der Figur in die angegebene Richtung zeigt. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\r\n\r\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\r\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\r\n                return Math.round(sh.angle);\r\n\r\n            }, false, false, \"Gibt den Blickwinkel der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.x;\r\n\r\n            }, false, false, \"Gibt x-Position der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n                return center.y;\r\n\r\n            }, false, false, \"Gibt y-Position der Figur zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Entfernt die Figur aus dem Zeichenfenster\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\r\n\r\n                sh.destroyChildren();\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\r\n                o.intrinsicData[\"isInitialTriangle\"] = true;\r\n\r\n\r\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\r\n    \r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbeString: string = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                for (let shape of sh.worldHelper.shapes) {\r\n                    if (shape != sh) {\r\n                        if(shape instanceof FigurHelper){\r\n                            for(let part of shape.shapes){\r\n                                let partHelper = part.intrinsicData[\"Actor\"];\r\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\r\n                                    if(sh.collidesWith(partHelper)){\r\n                                        return true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n\r\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\r\n                                if (sh.collidesWith(shape)) return true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                return false;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\r\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\r\n\r\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\r\n\r\n                if (sh.testdestroyed(\"Berührt\")) return;\r\n\r\n                return sh.collidesWith(objectShapeHelper);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\r\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n                let x3: number = parameters[5].value;\r\n                let y3: number = parameters[6].value;\r\n                let farbeString: string = parameters[7].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(polygonClass);\r\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = triangle;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                triangle.rotate(sh.angle, 0, 0);\r\n                triangle.scale(sh.scaleFactor, 0, 0);\r\n                triangle.move(center.x, center.y);\r\n                triangle.setFillColor(farbe);\r\n                triangle.setBorderColor(\"black\");\r\n                triangle.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element und fügt es der Figur hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\r\n\r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                let rto = new RuntimeObject(rectangleClass);\r\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                rectangleHelper.rotate(sh.angle, 0, 0);\r\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\r\n                rectangleHelper.move(center.x, center.y);\r\n                rectangleHelper.setFillColor(farbe);\r\n                rectangleHelper.setBorderColor(\"black\");\r\n                rectangleHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\r\n\r\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let breite: number = parameters[3].value;\r\n                let höhe: number = parameters[4].value;\r\n                let farbeString: string = parameters[5].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\r\n                \r\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\r\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\r\n                    sh.destroyChildren();\r\n                }\r\n\r\n                let farbe = GNGFarben[farbeString];\r\n                if (farbe == null) farbe = 0;\r\n\r\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\r\n                breite = breite - 0.1;\r\n\r\n                let rto = new RuntimeObject(ellipseClass);\r\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\r\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\r\n\r\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\r\n\r\n                ellipseHelper.rotate(sh.angle, 0, 0);\r\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\r\n                ellipseHelper.move(center.x, center.y);\r\n                ellipseHelper.setFillColor(farbe);\r\n                ellipseHelper.setBorderColor(\"black\");\r\n                ellipseHelper.setBorderWidth(2);\r\n                sh.add(rto);\r\n\r\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\r\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\r\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\r\n        t.intrinsicData[\"Actor\"] = th;\r\n        th.move(center.x, center.y);\r\n        th.setFillColor(\"yellow\");\r\n        th.setBorderColor(\"black\");\r\n        th.setBorderWidth(2);\r\n        gh.add(t);\r\n\r\n        let c: RuntimeObject = new RuntimeObject(circleClass);\r\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\r\n        c.intrinsicData[\"Actor\"] = ch;\r\n        ch.move(center.x, center.y);\r\n        ch.setFillColor(\"blue\");\r\n        ch.setBorderColor(\"black\");\r\n        ch.setBorderWidth(2);\r\n        gh.add(c);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass FigurHelper extends GroupHelper {\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    destroy(){\r\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class RandomClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Random\", module, \"Zufallszahlengenerator\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\r\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let bound: number = parameters[1].value;\r\n\r\n                return Math.floor(Math.random()*bound);\r\n\r\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randint\", new Parameterlist([\r\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.floor(Math.random()*(to - from + 1) + from);\r\n\r\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\r\n\r\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\r\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let from: number = parameters[1].value;\r\n                let to: number = parameters[2].value;\r\n\r\n                return Math.random()*(to - from) + from;\r\n\r\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class DirectionClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Direction\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\r\n    }\r\n\r\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","export class Boxes3d {\r\n    public static createCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createCube3dMesh(), material);\r\n    }\r\n    public static createCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, -1, 1, 1, -1, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 1.00,  0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 1.00, 0.66666, 1.00, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.66666, 1, 0.33333, 0.75, 0.33333, 1,   0.66666, 0.75, 0.66666, 0.75, 0.33333, 0.5, 0.33333, 0.75, 0.66666, 0.5, \r\n                //  0.66666, 0.5, 0.33333, 0.25, 0.33333, 0.5, 0.66666, 0.25, 0.66666, 0.25, 0.33333, 0, 0.33333, 0.25, 0.66666, 0, \r\n                //  0.33333, 0.25, 0.125, 0.5, 0.33333, 0.5, 0.125, 0.25, \r\n                //1.0, 0.25, 0.66666, 0.5, 1.0, 0.5, 0.66666, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createHalfheightCube3d(material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createHalfheightCube3dMesh(), material);\r\n    }\r\n    public static createHalfheightCube3dMesh() {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n                buffer: new Float32Array([-1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, -1,  // 0, 1, 2, 3\r\n                -1, 1, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1,  // 4, 5, 6, 7\r\n                    1, 1, -1, 1, 0, 1, 1, 0, -1, 1, 1, 1, // 8, 9, 10, 11\r\n                    1, 1, 1, -1, 0, 1, 1, 0, 1, -1, 1, 1,  // 12, 13, 14, 15\r\n                    1, 0, 1, -1, 0, -1, 1, 0, -1, -1, 0, 1,  // 16, 17, 18, 19\r\n                -1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1]) // 20, 21, 22, 23\r\n            },\r\n            indices: {\r\n                buffer: new Uint8Array([0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9, 12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21])\r\n            },\r\n            normals: {\r\n                buffer: new Float32Array([-1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n                buffer: new Float32Array([\r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0.66666, 0.00, 0.33333, 0.50,  0.66666, 0.50, 0.33333, 0.00, \r\n                    0,       0,    0.33333, 0.25, 0.33333, 0,    0,       0.25, \r\n                    0.66666, 0, 1.0, 1.0, 1.0, 0, 0.66666, 1.00])\r\n                // buffer: new Float32Array([0.6, 1, 0.4, 0.75, 0.4, 1, 0.6, 0.75, 0.6, 0.75, 0.4, 0.5, 0.4, 0.75, \r\n                //                           0.6, 0.5, 0.6, 0.5, 0.4, 0.25, 0.4, 0.5, 0.6, 0.25, 0.6, 0.25, 0.4, 0, \r\n                //                           0.4, 0.25, 0.6, 0, 0.4, 0.25, 0.125, 0.5, 0.4, 0.5, 0.125, 0.25, 1.0, 0.25, 0.6, \r\n                //                           0.5, 1.0, 0.5, 0.6, 0.25])\r\n            }],\r\n            tangents: {\r\n                buffer: new Float32Array([0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1, -1, 0, 0, 1])\r\n            }\r\n        })\r\n    }\r\n\r\n    public static createPlane3d(repeatTextureU: number = 1, repeatTextureV: number = 1, material: Pixi3d.Material = new Pixi3d.StandardMaterial()){\r\n        return new Pixi3d.Mesh3D(this.createPlane3dMesh(repeatTextureU, repeatTextureV), material);\r\n    }\r\n\r\n    public static createPlane3dMesh(repeatTextureU: number = 1, repeatTextureV: number = 1) {\r\n        return Object.assign(new Pixi3d.MeshGeometry3D(), {\r\n            positions: {\r\n              buffer: new Float32Array([-1, 0, 1, 1, 0, -1, -1, 0, -1, 1, 0, 1])\r\n            },\r\n            indices: {\r\n              buffer: new Uint8Array([0, 1, 2, 0, 3, 1])\r\n            },\r\n            normals: {\r\n              buffer: new Float32Array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0])\r\n            },\r\n            uvs: [{\r\n              buffer: new Float32Array([0, repeatTextureV, repeatTextureU, 0, 0, 0, repeatTextureU, repeatTextureV])\r\n            }]\r\n          })\r\n    }\r\n\r\n\r\n}\r\n","import { WorldHelper } from \"../World.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\n\r\nexport function getSpritesheetTexture(identifier: string, copy: boolean = false, renderer: PIXI.Renderer = null) {\r\n    let sheet = PIXI.Loader.shared.resources[\"spritesheet\"].spritesheet;\r\n    let texture = sheet.textures[identifier];\r\n\r\n    if (copy) {\r\n        let sprite = new PIXI.Sprite(texture);\r\n\r\n        let dynamicTexture1 = PIXI.RenderTexture.create({\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            scaleMode: PIXI.SCALE_MODES.NEAREST,\r\n            wrapMode: PIXI.WRAP_MODES.REPEAT\r\n        });\r\n\r\n        renderer.render(sprite, {\r\n            renderTexture: dynamicTexture1\r\n        });\r\n\r\n        return new Pixi3d.StandardMaterialTexture(dynamicTexture1.baseTexture);\r\n    } else {\r\n        let smt = new Pixi3d.StandardMaterialTexture(texture.baseTexture);\r\n        smt.transform = new Pixi3d.TextureTransform()\r\n        smt.transform.offset.set(\r\n            (texture.frame.x + 0) / texture.baseTexture.width,\r\n            (texture.frame.y + 0) / texture.baseTexture.height\r\n        )\r\n        smt.transform.scale.set(\r\n            texture.frame.width / texture.baseTexture.width,\r\n            texture.frame.height / texture.baseTexture.height\r\n        )\r\n        return smt;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class RobotMarker extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotBrick extends Pixi3d.Mesh3D {\r\n    constructor(geometry: Pixi3d.MeshGeometry3D, material: Pixi3d.Material, public farbe: string) {\r\n        super(geometry, material);\r\n    }\r\n}\r\n\r\nexport class RobotCubeFactory {\r\n\r\n    farben: string[] = [\"rot\", \"gelb\", \"grün\", \"blau\"];\r\n    farbeToColorInfoMap: { [farbe: string]: number[] } = {\r\n        \"rot\": [1.0, 0.0, 0.0],\r\n        \"gelb\": [1.0, 1.0, 0.0],\r\n        \"grün\": [0.0, 1.0, 0.0],\r\n        \"blau\": [0.0, 0.0, 1.0]\r\n    }\r\n    farbeToMarkerMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n    farbeToBrickMaterialMap: { [farbe: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n\r\n    grassBrickMaterial: Pixi3d.StandardMaterial;\r\n    groundPlaneMaterial: Pixi3d.StandardMaterial;\r\n\r\n    planeMaterial: { [key: string]: Pixi3d.StandardMaterial } = {};\r\n\r\n    cloudMaterial: Pixi3d.StandardMaterial;\r\n\r\n    light1: Pixi3d.Light;\r\n    light2: Pixi3d.Light;\r\n    lightingEnvironment: Pixi3d.LightingEnvironment;\r\n\r\n\r\n\r\n    getBrick(farbe: string) {\r\n        return new RobotBrick(Boxes3d.createHalfheightCube3dMesh(), this.farbeToBrickMaterialMap[farbe], farbe);\r\n    }\r\n\r\n    getGrassBrick() {\r\n        return new Pixi3d.Mesh3D(Boxes3d.createCube3dMesh(), this.grassBrickMaterial);\r\n    }\r\n\r\n    getGrassPlane(x: number, z: number) {\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(x, z), this.groundPlaneMaterial);\r\n        mesh.scale.x = x;\r\n        mesh.scale.z = z;\r\n        mesh.x += x - 1;\r\n        mesh.z += z - 1;\r\n        //let plane = Pixi3d.Mesh3D.createPlane();\r\n        // (<Pixi3d.StandardMaterial>plane.material).baseColor = new Pixi3d.Color(0, 1, 0, 1); // The base color will be blended together with base color texture (if available).\r\n        // plane.y = -0.5;\r\n        // plane.scale.set(10);\r\n        return mesh;\r\n    }\r\n\r\n    makePlane(container: Pixi3d.Container3D, x: number, y: number, z: number, widthX: number, widthZ: number, spriteOrColor: string | Pixi3d.Color) {\r\n        let material: Pixi3d.StandardMaterial;\r\n        if (typeof spriteOrColor == \"string\") {\r\n            material = this.getPlaneMaterial(spriteOrColor);\r\n        } else {\r\n            material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            material.baseColor = spriteOrColor;\r\n        }\r\n        let mesh = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(widthX, widthZ), material);\r\n        mesh.y = y;\r\n        mesh.x = x;\r\n        mesh.z = z;\r\n        mesh.scale.set(widthX, 1, widthZ);\r\n        container.addChild(mesh);\r\n    }\r\n\r\n    getMarker(farbe: string) {\r\n        let marker = new RobotMarker(Boxes3d.createCube3dMesh(), this.farbeToMarkerMaterialMap[farbe], farbe);\r\n        marker.scale.set(0.9, 0.1, 0.9);\r\n        return marker;\r\n    }\r\n\r\n    getSidePlanes(worldX: number, worldY: number, sideSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let sideMaterial = this.getPlaneMaterial(sideSprite); //3d#3\r\n\r\n        let mesh1 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh1.scale.x = worldX + 2 * radius;\r\n        mesh1.x += worldX - 1;\r\n        mesh1.y -= 1 + 2 * deep;\r\n        mesh1.z -= 1 + 2 * radius;\r\n        mesh1.rotationQuaternion.setEulerAngles(-90, 0, 180);\r\n        planes.push(mesh1);\r\n\r\n        let mesh2 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), sideMaterial);\r\n        mesh2.scale.x = worldX + 2 * radius;\r\n        mesh2.x += worldX - 1;\r\n        mesh2.y -= 1 + 2 * deep;\r\n        mesh2.z += 2 * worldY - 1 + 2 * radius;\r\n        mesh2.rotationQuaternion.setEulerAngles(90, 0, 0);\r\n        planes.push(mesh2);\r\n\r\n        let mesh3 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh3.scale.x = worldY + 2 * radius;\r\n        mesh3.y -= 1 + 2 * deep;\r\n        mesh3.x -= 1 + 2 * radius;\r\n        mesh3.z += worldY - 1;\r\n        mesh3.rotationQuaternion.setEulerAngles(90, -90, 0);\r\n        planes.push(mesh3);\r\n\r\n        let mesh4 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), sideMaterial);\r\n        mesh4.scale.x = worldY + 2 * radius;\r\n        mesh4.y -= 1 + 2 * deep;\r\n        mesh4.x += 2 * worldX - 1 + 2 * radius;\r\n        mesh4.z += worldY - 1;\r\n        mesh4.rotationQuaternion.setEulerAngles(90, 90, 0);\r\n        planes.push(mesh4);\r\n\r\n        return planes;\r\n    }\r\n\r\n    getHorizontalPlanes(worldX: number, worldY: number, topSprite: string, radius: number, deep: number): Pixi3d.Mesh3D[] {\r\n        let planes: Pixi3d.Mesh3D[] = [];\r\n\r\n        let topMaterial = this.getPlaneMaterial(topSprite);\r\n\r\n        let mesh5 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh5.scale.x = worldX + 2 * radius;\r\n        mesh5.x += worldX - 1;\r\n        mesh5.y -= 2 + 2 * deep;\r\n        mesh5.z -= 2 + 2 * radius;\r\n        mesh5.rotationQuaternion.setEulerAngles(180, 0, 180);\r\n        planes.push(mesh5);\r\n\r\n        let mesh6 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldX, 1), topMaterial);\r\n        mesh6.scale.x = worldX + 2 * radius;\r\n        mesh6.x += worldX - 1;\r\n        mesh6.y -= 2 + 2 * deep;\r\n        mesh6.z += 2 * worldY + 2 * radius;\r\n        mesh6.rotationQuaternion.setEulerAngles(0, 0, 0);\r\n        planes.push(mesh6);\r\n\r\n        let mesh7 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh7.scale.x = worldY + 2 * radius + 2;\r\n        mesh7.y -= 2 + 2 * deep;\r\n        mesh7.x -= 2 + 2 * radius;\r\n        mesh7.z += worldY - 1;\r\n        mesh7.rotationQuaternion.setEulerAngles(0, -90, 0);\r\n        planes.push(mesh7);\r\n\r\n        let mesh8 = new Pixi3d.Mesh3D(Boxes3d.createPlane3dMesh(worldY, 1), topMaterial);\r\n        mesh8.scale.x = worldY + 2 * radius + 2;\r\n        mesh8.y -= 2 + 2 * deep;\r\n        mesh8.x += 2 * worldX + 2 * radius;\r\n        mesh8.z += worldY - 1;\r\n        mesh8.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n        planes.push(mesh8);\r\n\r\n        return planes;\r\n    }\r\n\r\n    makeClouds(container: Pixi3d.Container3D, height: number, originX: number, originZ: number) {\r\n        let count = 150;\r\n        let numberOfBatches = 20;\r\n        let todo = count;\r\n\r\n        let f = () => {\r\n            if (todo <= 0) return;\r\n            let radius = 1500;\r\n            let maxWidth = 20;\r\n            for (let i = 0; i < count / numberOfBatches; i++) {\r\n                todo--;\r\n                let distance = Math.sqrt(Math.random()) * radius;\r\n                let angle = Math.random() * 2 * Math.PI;\r\n\r\n                let x1 = Math.floor(distance * Math.cos(angle)) + originX;\r\n                let z1 = Math.floor(distance * Math.sin(angle)) + originZ;\r\n\r\n                let count = Math.random() * 10 + 2;\r\n\r\n                for (let j = 0; j < count; j++) {\r\n                    let mesh = Boxes3d.createCube3d(this.cloudMaterial);\r\n\r\n                    let scaleX = Math.floor(Math.random() * maxWidth + 2);\r\n                    let scaleY = Math.floor(Math.random() * maxWidth / 4 + 2);\r\n                    let scaleZ = Math.floor(Math.random() * maxWidth + 2);\r\n\r\n                    let dx = Math.floor(Math.random() * 3 * (5 + count + scaleX));\r\n                    let dz = Math.floor(Math.random() * 3 * (5 + count + scaleZ));\r\n\r\n                    mesh.x = x1 + dx;\r\n                    mesh.z = z1 + dz;\r\n\r\n                    mesh.y = height + scaleY / 2;\r\n\r\n                    mesh.scale.set(scaleX, scaleY, scaleZ);\r\n\r\n                    container.addChild(mesh);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            setTimeout(f, 200);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }\r\n\r\n    constructor(private worldHelper: WorldHelper, private camera: Pixi3d.Camera) {\r\n\r\n        let renderer = <PIXI.Renderer>worldHelper.app.renderer;\r\n\r\n        this.light1 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.ambient,\r\n            range: 100,\r\n            intensity: 30,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light1.position.set(-4, 4, 4);\r\n\r\n        this.light2 = Object.assign(new Pixi3d.Light(), {\r\n            type: Pixi3d.LightType.directional,\r\n            range: 600,\r\n            intensity: 4,\r\n            color: new Pixi3d.Color(1, 1, 1)\r\n        });\r\n        this.light2.position.set(12, 16, -12);\r\n        this.light2.rotationQuaternion.setEulerAngles(25, 45, 0);\r\n\r\n        this.lightingEnvironment = new Pixi3d.LightingEnvironment(<PIXI.Renderer>worldHelper.app.renderer);\r\n        this.lightingEnvironment.lights.push(this.light1, this.light2);\r\n\r\n\r\n        this.grassBrickMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.grassBrickMaterial);\r\n        this.grassBrickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#0\");\r\n\r\n        this.cloudMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.cloudMaterial);\r\n        this.cloudMaterial.baseColor = new Pixi3d.Color(1.0, 1.0, 1.0, 0.5);\r\n\r\n        this.groundPlaneMaterial = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(this.groundPlaneMaterial);\r\n        this.groundPlaneMaterial.baseColorTexture = getSpritesheetTexture(\"robot#2\", true, renderer);\r\n\r\n        for (let farbe of this.farben) {\r\n            let material = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(material);\r\n            let colorInfo = this.farbeToColorInfoMap[farbe];\r\n            material.baseColor = new Pixi3d.Color(colorInfo[0], colorInfo[1], colorInfo[2], 1);\r\n            this.farbeToMarkerMaterialMap[farbe] = material;\r\n\r\n            let brickMaterial = new Pixi3d.StandardMaterial();\r\n            this.initMaterial(brickMaterial);\r\n            let index = this.farben.indexOf(farbe) + 4;\r\n            brickMaterial.baseColorTexture = getSpritesheetTexture(\"robot#\" + index);\r\n            this.farbeToBrickMaterialMap[farbe] = brickMaterial;\r\n        }\r\n\r\n    }\r\n\r\n    initMaterial(material: Pixi3d.StandardMaterial) {\r\n        material.camera = this.camera;\r\n        material.exposure = 1;\r\n        material.roughness = 0.9;\r\n        material.lightingEnvironment = this.lightingEnvironment;\r\n    }\r\n\r\n    getPlaneMaterial(spriteKey: string): Pixi3d.StandardMaterial {\r\n        let renderer = <PIXI.Renderer>this.worldHelper.app.renderer;\r\n\r\n        if (this.planeMaterial[spriteKey] != null) return this.planeMaterial[spriteKey];\r\n\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(spriteKey, true, renderer);\r\n        // material.doubleSided = true;\r\n        this.planeMaterial[spriteKey] = material;\r\n\r\n        return material;\r\n    }\r\n\r\n    makeSprite3d(textureKey: string, container: Pixi3d.Container3D){\r\n        let material = new Pixi3d.StandardMaterial();\r\n        this.initMaterial(material);\r\n        material.baseColorTexture = getSpritesheetTexture(textureKey, false);\r\n        material.alphaMode = Pixi3d.StandardMaterialAlphaMode.mask;\r\n        let sprite = Boxes3d.createPlane3d(1, 1, material);\r\n        container.addChild(sprite);\r\n        return sprite;\r\n    }\r\n\r\n}","import { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"../FilledShape.js\";\r\nimport { WorldHelper } from \"../World.js\";\r\nimport { Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { FilledShapeDefaults } from \"../FilledShapeDefaults.js\";\r\nimport { ShapeHelper } from \"../Shape.js\";\r\nimport { Boxes3d } from \"./Boxes3d.js\";\r\nimport { RobotBrick, RobotCubeFactory, RobotMarker } from \"./RobotCubeFactory.js\";\r\n\r\nexport class RobotClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Robot\", module, \"Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let robotWorldType = <Klass>module.typeStore.getType(\"RobotWorld\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, 1, 1, 5, 8)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter steht anfangs an der Stelle (1/1)', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 5, 10)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let worldX: number = parameters[3].value;\r\n                let worldY: number = parameters[4].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, worldX, worldY)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie mit der Größe worldX * worldY neu erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"Robot\", new Parameterlist([\r\n            { identifier: \"startX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"startY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let startX: number = parameters[1].value;\r\n                let startY: number = parameters[2].value;\r\n                let initialeWelt: string = parameters[3].value;\r\n\r\n                let rh = new RobotHelper(module.main.getInterpreter(), o, startX, startY, 0, 0, initialeWelt)\r\n                o.intrinsicData[\"Robot\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Robot-Objekt. Der Roboter wird anfangs an die Stelle (startX/startY) gesetzt. Wenn die RobotWorld noch nicht instanziert ist, wird sie auf Grundlage des Strings initialeWelt erstellt.', true));\r\n\r\n        this.addMethod(new Method(\"getWelt\", new Parameterlist([\r\n        ]), robotWorldType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.robotWorldHelper.runtimeObject;\r\n\r\n            }, false, false, 'Gibt das RobotWorld-Objekt zurück', false));\r\n\r\n        this.addMethod(new Method(\"rechtsDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnRight();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach rechts.', false));\r\n\r\n        this.addMethod(new Method(\"linksDrehen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.direction.turnLeft();\r\n                rh.adjustAngle();\r\n\r\n            }, false, false, 'Dreht den Roboter um 90° nach links.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.schritt();\r\n\r\n            }, false, false, 'Lässt den Roboter einen Schritt nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"schritt\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.schritt()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl Schritte nach vorne gehen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(\"rot\");\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"markeLöschen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeLöschen();\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke, die direkt unter ihm liegt, löschen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(\"gelb\");\r\n\r\n            }, false, false, 'Lässt den Roboter eine gelbe Marke direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"markeSetzen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.markeSetzen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter eine Marke der angegebenen Farbe direkt unter sich setzen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.hinlegen(\"rot\")) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"hinlegen\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.hinlegen(farbe);\r\n\r\n            }, false, false, 'Lässt den Roboter einen Ziegel der angegebenen Farbe vor sich hinlegen.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                rh.aufheben();\r\n\r\n            }, false, false, 'Lässt den Roboter einen roten Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"aufheben\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                for (let i = 0; i < anzahl; i++) {\r\n                    if (!rh.aufheben()) break;\r\n                }\r\n\r\n            }, false, false, 'Lässt den Roboter Anzahl rote Ziegel vor sich aufheben.', false));\r\n\r\n        this.addMethod(new Method(\"warten\", new Parameterlist([\r\n            { identifier: \"ZeitInMillisekunden\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, false, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"langsam\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(5);\r\n\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 5 Programmschritte/Sekunde.\"));\r\n\r\n        this.addMethod(new Method(\"schnell\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(\"max\");\r\n            }, false, false, \"Setzt die Ausführungsgeschwindigkeit auf 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"beenden\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if (console != null) {\r\n                    console.writeConsoleEntry(\"Das Programm wurde durch einen Roboter angehalten.\", null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }, false, false, \"Beendet das Programm.\"));\r\n\r\n        this.addMethod(new Method(\"istWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstWand\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istWand();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nicht direkt vor einer Wand steht.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter mindestens ein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"istZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter mindestens ein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter kein Ziegel liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(anzahl);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn direkt vor dem Roboter nicht genau Anzahl Ziegel liegen.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstZiegel\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istZiegel(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn auf dem Ziegelstapel direkt vor dem Roboter kein Ziegel mit der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"istMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter eine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n            { identifier: \"Farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let farbe: string = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(farbe);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke in der angegebenen Farbe liegt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstMarke\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return !rh.istMarke(null);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn unter dem Roboter keine Marke (egal in welcher Farbe) liegt.\"));\r\n\r\n        let himmelsrichtungen = [\"Norden\", \"Osten\", \"Süden\", \"Westen\"];\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let hr: string = himmelsrichtungen[i];\r\n\r\n            this.addMethod(new Method(\"ist\" + hr, new Parameterlist([\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                    return rh.direction.index == i;\r\n\r\n                }, false, false, \"Gibt genau dann true zurück, wenn der Roboter nach \" + hr + \" blickt.\"));\r\n        }\r\n\r\n        this.addMethod(new Method(\"istLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter keinen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"istVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine == rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstLeer\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine > 0;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens einen Stein mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"hatZiegel\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine >= anzahl;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter mindestens Anzahl Steine mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"nichtIstVoll\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n                return rh.hatSteine < rh.maxSteine;\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Roboter weniger als die maximale Anzahl von Steinen mit sich trägt.\"));\r\n\r\n        this.addMethod(new Method(\"setzeAnzahlSteine\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.hatSteine = anzahl;\r\n\r\n            }, false, false, \"Befüllt den Rucksack des Roboters mit genau Anzahl Steinen.\"));\r\n\r\n        this.addMethod(new Method(\"setzeRucksackgröße\", new Parameterlist([\r\n            { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let anzahl: number = parameters[1].value;\r\n                let rh = <RobotHelper>o.intrinsicData[\"Robot\"];\r\n\r\n                return rh.maxSteine = anzahl;\r\n\r\n            }, false, false, \"Gibt dem Roboter einen Rucksack, der maximal Anzahl Steine fasst.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RobotWorld\", module, \"Welt für Robot Karol\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"worldX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"worldY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let worldX: number = parameters[1].value;\r\n                let worldY: number = parameters[2].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, worldX, worldY, null);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt', true));\r\n\r\n        this.addMethod(new Method(\"RobotWorld\", new Parameterlist([\r\n            { identifier: \"initialeWelt\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let initialeWelt: string = parameters[1].value;\r\n\r\n                const interpreter = module.main.getInterpreter();\r\n\r\n                let rh = new RobotWorldHelper(interpreter, o, 0, 0, initialeWelt);\r\n                o.intrinsicData[\"RobotWorldHelper\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Robot-Welt.', true));\r\n\r\n            this.addMethod(new Method(\"setzeMaximalhöhe\", new Parameterlist([\r\n                { identifier: \"Anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let anzahl: number = parameters[1].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n    \r\n                    return rh.maximumHeight = anzahl;\r\n    \r\n                }, false, false, \"Ändert die maximale Höhe der Ziegelstapel.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeZiegel\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let anzahl: number = parameters[4].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n                    \r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    for(let i = 0; i < anzahl; i++){\r\n                        rh.addBrick(x-1, y-1, farbe);\r\n                    }\r\n    \r\n                }, false, false, \"Setzt Anzahl Ziegel an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n            this.addMethod(new Method(\"setzeMarke\", new Parameterlist([\r\n                { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let x: number = parameters[1].value;\r\n                    let y: number = parameters[2].value;\r\n                    let farbe: string = parameters[3].value;\r\n                    let rh = <RobotWorldHelper>o.intrinsicData[\"RobotWorldHelper\"];\r\n\r\n                    if(x < 1 || x > rh.worldX || y < 1 || y > rh.worldY){\r\n                        rh.interpreter.throwException(`Die Position (${x}/${y}) ist außerhalb der Weltgrenzen.`);\r\n                        return;\r\n                    }\r\n\r\n                    rh.setMarker(x-1, y-1, farbe);\r\n    \r\n                }, false, false, \"Setzt einen Marker an der angegebenen Position mit der angegebenen Farbe. Die x- und y-Koordinaten beginnen bei 1.\"));\r\n    \r\n    \r\n    }\r\n\r\n}\r\n\r\nexport class RobotWorldHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n\r\n    robotCubeFactory: RobotCubeFactory;\r\n    camera: Pixi3d.Camera;\r\n    displayObject: PIXI.DisplayObject;\r\n    container3D: Pixi3d.Container3D;\r\n\r\n    markers: RobotMarker[][] = [];    // x, y\r\n    bricks: RobotBrick[][][] = [];   // x, y, height\r\n\r\n    maximumHeight: number = 15;\r\n\r\n    robots: RobotHelper[] = [];\r\n\r\n    constructor(public interpreter: Interpreter, public runtimeObject: RuntimeObject,\r\n        public worldX: number, public worldY: number, initialeWelt: string) {\r\n\r\n        this.fetchWorld(interpreter);\r\n\r\n        if (this.worldHelper.robotWorldHelper != null) {\r\n            this.interpreter.throwException(\"Es wurde bereits ein Robot-World-Objekt instanziert. Davon kann es aber nur ein einziges geben. \\nTipp: Jedes Robot-Objekt kann das Robot-World-Objekt mit der getRobotWorld() holen.\");\r\n            return;\r\n        }\r\n\r\n        this.worldHelper.robotWorldHelper = this;\r\n\r\n        this.camera = new Pixi3d.Camera(<PIXI.Renderer>this.worldHelper.app.renderer);\r\n\r\n        this.robotCubeFactory = new RobotCubeFactory(this.worldHelper, this.camera);\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n\r\n        this.container3D = new Pixi3d.Container3D();\r\n        this.displayObject = this.container3D;\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n\r\n        if (initialeWelt != null) {\r\n            this.initFromString(initialeWelt);\r\n        } else {\r\n            this.initWorldArrays(worldX, worldY);\r\n        }\r\n\r\n        this.renderOrnamentsAndInitCamera();\r\n\r\n    }\r\n\r\n    adjustRobotPositions(x: number, y: number){\r\n        for(let robot of this.robots){\r\n            if(robot.x == x && robot.y == y){\r\n                robot.model.y = this.getBrickCount(x, y) + 1.6;\r\n            }\r\n        }\r\n    }\r\n\r\n    initWorldArrays(worldX: number, worldY: number) {\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchWorld(interpreter: Interpreter) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            interpreter.worldHelper = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n\r\n    renderOrnamentsAndInitCamera() {\r\n        this.worldHelper.app.renderer.backgroundColor = 0x8080ff;\r\n\r\n        let gp = this.robotCubeFactory.getGrassPlane(this.worldX, this.worldY);\r\n        this.container3D.addChild(gp);\r\n\r\n        let deep: number = 0;\r\n        let radius: number = 0;\r\n        this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#3\", radius, deep++)\r\n            .forEach(p => { this.container3D.addChild(p); });\r\n\r\n            this.robotCubeFactory.getSidePlanes(this.worldX, this.worldY, \"robot#10\", radius, deep++)\r\n                .forEach(p => { this.container3D.addChild(p); });\r\n\r\n        this.robotCubeFactory.makeClouds(this.container3D, 60, this.worldX/2, this.worldY/2);\r\n\r\n        this.robotCubeFactory.makePlane(this.container3D, this.worldX/2, -4, this.worldY/2, 3000, 3000, \r\n        new Pixi3d.Color(55.0/255, 174.0/255, 77.0/255));\r\n\r\n        let northSprite = this.robotCubeFactory.makeSprite3d(\"robot#11\", this.container3D);\r\n        // northSprite.position.set(this.worldX + 6, 1, this.worldY - 1);\r\n        northSprite.position.set(2*this.worldX + 1, -1, 2*this.worldY - 6);\r\n        northSprite.scale.set(257.0/40, 1, 1);\r\n        northSprite.rotationQuaternion.setEulerAngles(0, 90, 0);\r\n\r\n        let control = new Pixi3d.CameraOrbitControl(this.worldHelper.app.view, this.camera);\r\n        control.angles.x = 45;\r\n        control.angles.y = -20;\r\n        control.target = { x: this.worldX - 1, y: 0, z: this.worldY - 1 }\r\n        control.distance = Math.max(this.worldX, this.worldY) * 2.3;\r\n\r\n    }\r\n\r\n    addBrick(x: number, y: number, farbe: string): boolean {\r\n        let oldHeight = this.bricks[x][y].length;\r\n        if (oldHeight < this.maximumHeight) {\r\n            let brick = this.robotCubeFactory.getBrick(farbe);\r\n            this.setToXY(x, y, oldHeight, brick);\r\n            this.bricks[x][y].push(brick);\r\n            this.container3D.addChild(brick);\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    removeBrick(x: number, y: number): boolean {\r\n        if (this.bricks[x][y].length > 0) {\r\n            let brick = this.bricks[x][y].pop();\r\n            brick.destroy();\r\n            this.adjustMarkerHeight(x, y);\r\n            this.adjustRobotPositions(x, y);\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    getBrickCount(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    hasBrickColor(x: number, y: number, farbe: string): boolean {\r\n        for (let brick of this.bricks[x][y]) {\r\n            if (brick.farbe == farbe) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getMarkerColor(x: number, y: number): string {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) return null;\r\n        return marker.farbe;\r\n    }\r\n\r\n    setMarker(x: number, y: number, farbe: string) {\r\n        if (this.markers[x][y] != null) {\r\n            this.markers[x][y].destroy();\r\n        }\r\n        let marker = this.robotCubeFactory.getMarker(farbe);\r\n        this.markers[x][y] = marker;\r\n        this.container3D.addChild(marker);\r\n        this.setToXY(x, y, 0, marker);\r\n        this.adjustMarkerHeight(x, y);\r\n    }\r\n\r\n    removeMarker(x: number, y: number): boolean {\r\n        let marker = this.markers[x][y];\r\n        if (marker == null) {\r\n            return false;\r\n        } else {\r\n            this.markers[x][y] = null;\r\n            marker.destroy();\r\n            return true;\r\n        }\r\n    }\r\n\r\n    adjustMarkerHeight(x: number, y: number) {\r\n        let marker = this.markers[x][y];\r\n        if (marker != null) {\r\n            let height = this.bricks[x][y].length\r\n            marker.y = height + 0.1;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        for (let x = 0; x < this.bricks.length; x++) {\r\n            for (let y = 0; y < this.bricks[x].length; y++) {\r\n                let brickList = this.bricks[x][y];\r\n                while (brickList.length > 0) {\r\n                    brickList.pop().destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let x = 0; x < this.markers.length; x++) {\r\n            for (let y = 0; y < this.markers[x].length; y++) {\r\n                let marker = this.markers[x][y];\r\n                if (marker != null) {\r\n                    this.markers[x][y] = null;\r\n                    marker.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDimensions(worldX: number, worldY: number) {\r\n        this.clear();\r\n\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n\r\n        this.markers = [];\r\n        this.bricks = [];\r\n        for (let x = 0; x < worldX; x++) {\r\n            let markerColumn = [];\r\n            this.markers.push(markerColumn);\r\n            let brickColumn = [];\r\n            this.bricks.push(brickColumn);\r\n            for (let y = 0; y < worldY; y++) {\r\n                markerColumn.push(null);\r\n                brickColumn.push([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberOfBricks(x: number, y: number) {\r\n        return this.bricks[x][y].length;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param initString \r\n     * \" \": empty \r\n     * \"_\": no brick, yellow marker\r\n     * \"Y\", \"G\", \"B\", \"R\": switch marker color\r\n     * \"y\", \"g\", \"b\", \"r\": switch brick color\r\n     * \"1\", ..., \"9\": 1, ..., 9 bricks \r\n     * \"1m\", ..., \"9m\": 1, ..., 9 bricks with markers on them\r\n     */\r\n    initFromString(initString: string) {\r\n\r\n        let lowerCaseCharToColor = { \"r\": \"rot\", \"g\": \"grün\", \"b\": \"blau\", \"y\": \"gelb\" };\r\n        let upperCaseCharToColor = { \"R\": \"rot\", \"G\": \"grün\", \"B\": \"blau\", \"Y\": \"gelb\" };\r\n        let digits = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\r\n\r\n        this.clear();\r\n        let rows = initString.split(\"\\n\");\r\n        let maxColumns = 0;\r\n        rows.forEach((row) => { let rowLength = this.rowLength(row); if (rowLength > maxColumns) maxColumns = rowLength });\r\n        this.initWorldArrays(maxColumns, rows.length);\r\n\r\n        this.worldX = maxColumns;\r\n        this.worldY = rows.length;\r\n\r\n        let c1: string;\r\n        let c2: string;\r\n        let brickColor = \"rot\";\r\n        let markerColor = \"gelb\";\r\n\r\n        for (let y = 0; y < rows.length; y++) {\r\n            let row = rows[y];\r\n            let x = 0;\r\n            let pos = 0;\r\n            while (pos < row.length) {\r\n                c1 = row.charAt(pos);\r\n                c2 = pos < row.length - 1 ? row.charAt(pos + 1) : null;\r\n                pos++;\r\n                if (lowerCaseCharToColor[c1] != null) {\r\n                    brickColor = lowerCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                if (upperCaseCharToColor[c1] != null) {\r\n                    markerColor = upperCaseCharToColor[c1];\r\n                    continue;\r\n                }\r\n                let index = digits.indexOf(c1);\r\n                if (index >= 0) {\r\n                    for (let i = 0; i < index + 1; i++) {\r\n                        this.addBrick(x, y, brickColor);\r\n                    }\r\n                    if (c2 == \"m\") {\r\n                        this.setMarker(x, y, markerColor);\r\n                        pos++;\r\n                    }\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \" \") {\r\n                    x++;\r\n                    continue;\r\n                }\r\n                if (c1 == \"_\") {\r\n                    this.setMarker(x, y, markerColor);\r\n                    x++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rowLength(row: string) {\r\n        let l: number = 0;\r\n        let forwardChars = \" _1234567890\";\r\n\r\n        for (let i = 0; i < row.length; i++) {\r\n            if (forwardChars.indexOf(row.charAt(i)) >= 0) {\r\n                l++;\r\n            }\r\n        }\r\n        return l;\r\n    }\r\n\r\n    setToXY(x: number, y: number, height: number, mesh: Pixi3d.Mesh3D) {\r\n        mesh.x = 2 * (this.worldX - x - 1);\r\n        mesh.z = 2 * (this.worldY - y - 1);\r\n        mesh.y = height;\r\n    }\r\n\r\n    // Wird von WorldHelper aufgerufen\r\n    destroy() {\r\n\r\n    }\r\n\r\n    gibtFarbe(farbe: string): boolean {\r\n        return this.robotCubeFactory.farben.indexOf(farbe) >= 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass Direction {\r\n    names: string[] = [\"top\", \"right\", \"bottom\", \"left\"];\r\n    deltas: { dx: number, dy: number }[] = [{ dx: 0, dy: -1 }, { dx: -1, dy: 0 }, { dx: 0, dy: 1 }, { dx: 1, dy: 0 }];\r\n    angles: number[] = [0, 90, 180, 270];\r\n\r\n    public index: number = 2; // top\r\n\r\n    turnRight() {\r\n        this.index = (this.index - 1 + 4) % 4;\r\n    }\r\n\r\n    turnLeft() {\r\n        this.index = (this.index + 1 + 4) % 4;\r\n    }\r\n\r\n    getAngle() {\r\n        return this.angles[this.index];\r\n    }\r\n\r\n    getDeltas() {\r\n        return this.deltas[this.index];\r\n    }\r\n\r\n}\r\n\r\nexport class RobotHelper {\r\n\r\n    robotWorldHelper: RobotWorldHelper;\r\n    model: Pixi3d.Model;\r\n    x: number;\r\n    y: number;\r\n\r\n    hatSteine: number = 10000000;\r\n    maxSteine: number = 100000000;\r\n\r\n    direction: Direction = new Direction();\r\n\r\n    constructor(private interpreter: Interpreter, private runtimeObject: RuntimeObject,\r\n        startX: number, startY: number,\r\n        worldX: number, worldY: number,\r\n        initialeWelt: string = null\r\n    ) {\r\n\r\n        this.fetchRobotWorld(interpreter, worldX, worldY, initialeWelt);\r\n        this.robotWorldHelper.robots.push(this);\r\n\r\n        this.render();\r\n\r\n        this.moveTo(startX - 1, startY - 1);\r\n        this.adjustAngle();\r\n\r\n    }\r\n\r\n    fetchRobotWorld(interpreter: Interpreter, worldX: number, worldY: number, initialeWelt: string) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        this.robotWorldHelper = worldHelper?.robotWorldHelper;\r\n\r\n        if (this.robotWorldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"RobotWorld\").type);\r\n            this.robotWorldHelper = new RobotWorldHelper(interpreter, w, worldX, worldY, initialeWelt);\r\n            w.intrinsicData[\"RobotWorldHelper\"] = this.robotWorldHelper;\r\n        }\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n        //@ts-ignore\r\n        let robot = Pixi3d.Model.from(PIXI.Loader.shared.resources[\"steve\"].gltf);\r\n        robot.scale.set(0.1);\r\n        for (let mesh of robot.meshes) {\r\n            let sm = <Pixi3d.StandardMaterial>mesh.material;\r\n            sm.camera = this.robotWorldHelper.camera;\r\n            sm.exposure = 0.5;\r\n            sm.lightingEnvironment = this.robotWorldHelper.robotCubeFactory.lightingEnvironment;\r\n        }\r\n        this.robotWorldHelper.container3D.addChild(robot);\r\n        this.model = robot;\r\n\r\n    };\r\n\r\n    crop(n: number, min: number, max: number): number {\r\n        if (n < min) n = min;\r\n        if (n > max) n = max;\r\n        return n;\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        const rw = this.robotWorldHelper;\r\n        x = this.crop(x, 0, rw.worldX - 1);\r\n        y = this.crop(y, 0, rw.worldY - 1);\r\n\r\n        this.model.x = 2 * (rw.worldX - x - 1);\r\n        this.model.z = 2 * (rw.worldY - y - 1);\r\n        this.model.y = rw.getNumberOfBricks(x, y) + 1.6;\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    adjustAngle() {\r\n        this.model.transform.rotationQuaternion.setEulerAngles(0, this.direction.getAngle(), 0);\r\n    }\r\n\r\n    schritt(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter ist gegen eine Wand geprallt!\");\r\n            return false;\r\n        }\r\n\r\n        let oldHeight = rw.getNumberOfBricks(this.x, this.y);\r\n        let newHeight = rw.getNumberOfBricks(newX, newY);\r\n\r\n        if (newHeight < oldHeight - 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel nach unten springen.\");\r\n            return false;\r\n        }\r\n\r\n        if (newHeight > oldHeight + 1) {\r\n            this.interpreter.throwException(\"Der Roboter kann maximal einen Ziegel hoch springen.\");\r\n            return false;\r\n        }\r\n\r\n        this.moveTo(newX, newY);\r\n        return true;\r\n    }\r\n\r\n    hinlegen(farbe: string): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keine Ziegel hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        farbe = farbe.toLocaleLowerCase();\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Ziegel der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        if (this.hatSteine == 0) {\r\n            this.interpreter.throwException(\"Der Roboter hat keine Ziegel mehr bei sich und kann daher keinen mehr hinlegen.\");\r\n            return false;\r\n        }\r\n\r\n        if(rw.bricks[newX][newY].length >= rw.maximumHeight){\r\n            this.interpreter.throwException(\"Der Ziegelstapel darf die maximale Höhe \" + rw.maximumHeight + \" nicht überschreiten.\");\r\n            return false;\r\n        }\r\n\r\n        rw.addBrick(newX, newY, farbe);\r\n        this.hatSteine--;\r\n\r\n        return true;\r\n    }\r\n\r\n    aufheben(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            this.interpreter.throwException(\"Der Roboter steht direkt vor einer Wand. Da kann er keinen Ziegel aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        if (rw.getNumberOfBricks(newX, newY) < 1) {\r\n            this.interpreter.throwException(\"Vor dem Roboter liegt kein Ziegel, er kann daher keinen aufheben.\");\r\n            return false;\r\n        }\r\n\r\n        rw.removeBrick(newX, newY);\r\n\r\n        if (this.hatSteine < this.maxSteine) {\r\n            this.hatSteine++;\r\n        } else {\r\n            this.interpreter.throwException(\"Der Roboter kann nicht mehr Steine aufheben, da er keinen Platz mehr in seinem Rucksack hat.\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    markeSetzen(farbe: string) {\r\n        const rw = this.robotWorldHelper;\r\n        farbe = farbe.toLocaleLowerCase();\r\n\r\n        if (!rw.gibtFarbe(farbe)) {\r\n            this.interpreter.throwException(\"Es gibt nur Marken der Farben \" + rw.robotCubeFactory.farben.join(\", \") + \". Die Farbe \" + farbe + \" ist nicht darunter.\");\r\n            return false;\r\n        }\r\n\r\n        rw.setMarker(this.x, this.y, farbe);\r\n    }\r\n\r\n    markeLöschen() {\r\n        const rw = this.robotWorldHelper;\r\n\r\n        rw.removeMarker(this.x, this.y);\r\n    }\r\n\r\n    istWand(): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        return (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY)\r\n\r\n    }\r\n\r\n    istZiegel(param: number | string | null): boolean {\r\n        let deltas = this.direction.getDeltas();\r\n        let newX = this.x + deltas.dx;\r\n        let newY = this.y + deltas.dy;\r\n        const rw = this.robotWorldHelper;\r\n\r\n        if (newX < 0 || newX >= rw.worldX || newY < 0 || newY >= rw.worldY) {\r\n            return false;\r\n        }\r\n\r\n        if (param == null) return rw.getBrickCount(newX, newY) > 0;\r\n\r\n        if (typeof param == \"string\") {\r\n            return rw.hasBrickColor(newX, newY, param.toLocaleLowerCase());\r\n        }\r\n\r\n        return rw.bricks[newX][newY].length == param;\r\n\r\n    }\r\n\r\n    istMarke(param: string | null): boolean {\r\n        const rw = this.robotWorldHelper;\r\n        let marke = rw.markers[this.x][this.y];\r\n        if (param == null) return marke != null;\r\n\r\n        if (typeof param == \"string\") {\r\n            return marke != null && marke.farbe == param.toLocaleLowerCase();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import { QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, StringPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class ResultSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"ResultSet\", module, \"Ein ResultSet-Objekt speichert das Ergebnis einer Abfrage an die Datenbank.\");\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.next();\r\n\r\n            }, false, false, 'Bewegt den \"Cursor\" zum nächsten Datensatz und gibt genau dann true zurück, wenn noch ein Datensatz da ist.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.size();\r\n\r\n            }, false, false, 'Gibt die Anzahl der Zeilen der Ergebnistabelle zurück.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.cursor;\r\n\r\n            }, false, false, 'Gibt den Index zurück, auf dem der \"Cursor\" in der Liste der Zeilen der Ergebnistabelle steht. Vor dem ersten Aufruf von next() wird -1 zurückgegeben.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"wasNull\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n                return rsh.wasNull;\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn der zuletzt gelesene Wert null war.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for(let type of types){\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnIndex: number = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n                    if(columnIndex < 1 || columnIndex > rsh.columnCount()){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte \" + columnIndex + \".\");\r\n                        return;\r\n                    }\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n            this.addMethod(new Method(\"get\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"columnLabel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), type,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let columnLabel: string = parameters[1].value;\r\n\r\n                    let rsh: ResultsetHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let interpreter = module.main.getInterpreter();\r\n\r\n\r\n                    if(rsh.isAfterLast()){\r\n                        interpreter.throwException(\"Der Cursor befindet sich hinter dem letzten Datensatz des ResultSet.\");\r\n                    }\r\n\r\n                    let columnIndex: number = rsh.getColumnIndex(columnLabel);\r\n                    if(columnIndex < 0){\r\n                        interpreter.throwException(\"Das Ergebnis hat keine Spalte mit dem Bezeichner \" + columnLabel + \".\");\r\n                        return;\r\n                    }\r\n    \r\n                    return rsh.getValue(type, columnIndex, module.main.getInterpreter());\r\n    \r\n                }, false, false, 'Gibt den Wert der Spalte mit dem angegebenen Spaltenindex als ' + type.identifier + \" zurück.\",\r\n                false));\r\n\r\n        }\r\n\r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ResultsetHelper {\r\n    cursor: number = -1;\r\n    wasNull: boolean = false;\r\n\r\n    constructor(private result: QueryResult){\r\n\r\n    }\r\n\r\n    getColumnIndex(columnLabel: string): number {\r\n        \r\n        columnLabel = columnLabel.toLocaleLowerCase();\r\n\r\n        let index = this.result.columns.findIndex((value, index) => {return value.toLocaleLowerCase() == columnLabel});\r\n        if(index < 0) return index;\r\n        return index + 1;\r\n    }\r\n\r\n\r\n    next(): boolean {\r\n        this.cursor++;\r\n        if(this.result == null) return false;\r\n        return this.cursor < this.result.values.length;\r\n    }\r\n\r\n    size(): number {\r\n        return this.result.values.length;\r\n    }\r\n\r\n    columnCount(): number {\r\n        return this.result.columns.length;\r\n    }\r\n\r\n    getValue(type: Type, columnIndex: number, interpreter: Interpreter) {\r\n\r\n        if(this.cursor < 0) this.cursor = 0;\r\n\r\n        if(this.cursor >= this.result.values.length){\r\n            interpreter.throwException(\"Es wurde versucht, auf den \" + (this.cursor + 1) + \". Datensatz zuzugreifen, das ResultSet hat aber nur \" + this.result.values.length + \" Datensätze.\");\r\n            return null;\r\n        }\r\n\r\n        let value = this.result.values[this.cursor][columnIndex - 1];\r\n        this.wasNull = value == null;\r\n\r\n        if(type == stringPrimitiveType){\r\n            return value == null ? null : \"\" + value;\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return Math.floor(value);\r\n        }\r\n\r\n        if(type == floatPrimitiveType || type == doublePrimitiveType){\r\n            if(value == null || !(typeof value == \"number\")){\r\n                return 0;\r\n            }\r\n            return value;\r\n        }\r\n\r\n        if(type == booleanPrimitiveType){\r\n            if(value == null) return false;\r\n            return (value + \"\").indexOf(\"1\") >= 0;\r\n        }\r\n\r\n    }\r\n\r\n    isAfterLast(): boolean {\r\n        return this.cursor > this.result.values.length - 1;\r\n    }\r\n\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\nexport class DatabaseStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Statement\", module, \"Ein Statement-Objekt repräsentiert eine Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n \r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                query = query.trim();\r\n                if(!query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");                    \r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                \r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n\r\n                connectionHelper.executeQuery(query, (error, result) => {\r\n                module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({value: rs, type: resultSetType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine selct-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let connectionHelper: ConnectionHelper = o.intrinsicData[\"ConnectionHelper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n\r\n                query = query.trim();\r\n                if(query.toLocaleLowerCase().startsWith(\"select\")){\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeUpdate können nur datenverändernde Anweisungen ausgeführt werden. Benutze für select-Anweisungen die Methode executeQuery.\");                    \r\n                    return;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                connectionHelper.executeWriteStatement(query, (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error != null){\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({value: 0, type: intPrimitiveType}, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"src/client/main/MainBase.js\";\r\nimport { WorkerSim } from \"./sqljsWorkerSim.js\";\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (error: string) => void) {\r\n        \r\n        this.main.getBottomDiv().console.writeConsoleEntry('Bitte warten, die Datenbank wird initialisiert...', null);\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"js/tools/database/sqljsWorker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let error: string;\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    // this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        error = (\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(error);\r\n                   \r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            error = (\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    executeWriteQueries(queries: string[], successCallback: () => void, errorCallback: QueryErrorCallback){\r\n\r\n        if(queries.length == 0){\r\n            successCallback()\r\n            return;\r\n        }\r\n\r\n        let query = queries.shift();\r\n\r\n        this.executeQuery(query, () => {\r\n            this.executeWriteQueries(queries, successCallback, errorCallback);\r\n        }, (message) => {\r\n            this.executeWriteQueries(queries, () => {}, (error) => {});\r\n            errorCallback(message); // report first error\r\n        });\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n    close(){\r\n        if(this.worker != null){\r\n            this.worker.terminate();\r\n            this.worker = null;\r\n        }\r\n    }\r\n\r\n}","import { DatabaseLongPollingListenerRequest, JMessageFromServer, JWebSocketMessageConnect, JWebSocketMessageDisconnect, JWebSocketMessageExecuteStatement, LongPollingListenerResponse, SendingStatementsMessageFromServer, WebSocketRequestConnect } from \"../../communication/Data.js\";\r\nimport { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ConnectionHelper } from \"../../runtimelibrary/database/Connection.js\";\r\n\r\nexport class DatabaseLongPollingListener {\r\n\r\n    identifier: number = Math.floor(Math.random() * 999999999);\r\n    isClosed: boolean = false;\r\n\r\n    constructor(private networkManager: NetworkManager,\r\n        private token: string,\r\n        private onServerSentStatementsCallback: (firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) => void) {\r\n    }\r\n\r\n    longPoll() {\r\n        let that = this;\r\n\r\n        let request: DatabaseLongPollingListenerRequest = {\r\n            token: this.token,\r\n            listenerIdentifier: this.identifier\r\n        }\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: that.networkManager.sqlIdeURL + \"jRegisterLongPollingListener\",\r\n            success: function (resp: string) {\r\n                if (resp != null && !that.isClosed && resp != \"\") {\r\n                    let response: LongPollingListenerResponse = JSON.parse(resp);\r\n                    if (response.success) {\r\n                        that.onServerSentStatementsCallback(response.firstNewStatementIndex,\r\n                            response.newStatements, response.rollbackToVersion);\r\n                    }\r\n                }\r\n\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 1000);\r\n                }\r\n            },\r\n            error: function (jqXHR, message) {\r\n                if (!that.isClosed) {\r\n                    setTimeout(() => {\r\n                        that.longPoll();\r\n                    }, 3000);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    close(){\r\n        this.isClosed = true;\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { ResultsetHelper } from \"./ResultSet.js\";\r\n\r\n\r\nexport class DatabasePreparedStatementClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PreparedStatement\", module, \"Ein PreparedStatement-Objekt repräsentiert eine parametrisierte Anweisung an die Datenbank.\");\r\n\r\n\r\n        let resultSetType = <Klass>module.typeStore.getType(\"ResultSet\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"executeQuery\", new Parameterlist([\r\n        ]), resultSetType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (!psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode executeQuery können nur select-Anweisungen ausgeführt werden. Benutze für datenverändernde Anweisungen die Methode executeUpdate.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n\r\n\r\n                psh.connectionHelper.executeQuery(psh.getQueryWithParameterValuesFilledIn(), (error, result) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    let rsh = new ResultsetHelper(result);\r\n                    let rs = new RuntimeObject(resultSetType);\r\n                    rs.intrinsicData[\"Helper\"] = rsh;\r\n                    interpreter.resumeAfterInput({ value: rs, type: resultSetType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine select-Anweisung enthält.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"executeUpdate\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                if (psh.query.toLocaleLowerCase().startsWith(\"select\")) {\r\n                    module.main.getInterpreter().resumeAfterInput(null);\r\n                    interpreter.throwException(\"Mit der Methode execute können nur datenverändernde Anweisungen ausgeführt werden.\" + \r\n                    \"Benutze für select-Anweisungen die Methode executeQuery.\");\r\n                    return null;\r\n                }\r\n\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n\r\n                let error = psh.checkQuery();\r\n\r\n                if (error != null) {\r\n                    interpreter.resumeAfterInput(null);\r\n                    interpreter.throwException(error);\r\n                    return null;\r\n                }\r\n                \r\n                psh.connectionHelper.executeWriteStatement(psh.getQueryWithParameterValuesFilledIn(), (error) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                        return;\r\n                    }\r\n                    interpreter.resumeAfterInput({ value: 0, type: intPrimitiveType }, true);\r\n                })\r\n\r\n            }, false, false, 'Führt ein SQL-Statement aus, das eine datenverändernde Anweisung enthält.',\r\n            false));\r\n\r\n        let types = [booleanPrimitiveType, intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n\r\n        for (let type of types) {\r\n\r\n            let typeIdFirstUppercase = type.identifier.charAt(0).toUpperCase() + type.identifier.substring(1);\r\n\r\n\r\n            this.addMethod(new Method(\"set\"+typeIdFirstUppercase, new Parameterlist([\r\n                { identifier: \"parameterIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"value\", type: type, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let index: number = parameters[1].value;\r\n                    let value: any = parameters[2].value;\r\n                    let psh: PreparedStatementHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    let error = psh.setValue(value, index);\r\n                    if (error != null) {\r\n                        module.main.getInterpreter().resumeAfterInput(null);\r\n                        module.main.getInterpreter().throwException(error);\r\n                    }\r\n\r\n                    return;\r\n\r\n                }, false, false, 'Setzt im Parameter mit dem angegebenen Index den ' + type.identifier + '-Wert ein.'));\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PreparedStatementHelper {\r\n\r\n    parameterValues: string[];\r\n    parameterPositions: number[];\r\n    query: string;\r\n\r\n    constructor(public connectionHelper: ConnectionHelper, query: string) {\r\n        this.query = query.trim();\r\n        this.prepareStatement(this.query);\r\n    }\r\n\r\n    prepareStatement(sql: string) {\r\n\r\n        let insideQuotation: boolean = false;\r\n        this.parameterPositions = [];\r\n\r\n        for (let i = 0; i < sql.length; i++) {\r\n\r\n            let c = sql.charAt(i);\r\n            switch (c) {\r\n                case \"'\": insideQuotation = !insideQuotation;\r\n                    break;\r\n                case \"?\": if (!insideQuotation) {\r\n                    this.parameterPositions.push(i);\r\n                }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.parameterValues = new Array(this.parameterPositions.length);\r\n\r\n    }\r\n\r\n    setValue(value: any, position: number): string {\r\n        if (position < 1 || position > this.parameterPositions.length) {\r\n            if (this.parameterPositions.length == 0) {\r\n                return \"Es gibt keine Parameter (mit ? besetzte Stellen) in dieser Anweisung.\";\r\n            }\r\n            return \"Es gibt nur die Parameterpositionen 1 bis \" + this.parameterPositions.length + \" in der SQL-Anweisung, keine Position \" + position + \".\";\r\n        }\r\n\r\n        if(value == null){\r\n            this.parameterValues[position - 1] = \"null\";\r\n        } else\r\n        if (typeof value == \"string\") {\r\n            value = value.replace(/'/g, \"''\");\r\n            this.parameterValues[position - 1] = \"'\" + value + \"'\";\r\n        } else {\r\n            this.parameterValues[position - 1] = \"\" + value;\r\n        }\r\n        return;\r\n    }\r\n\r\n    checkQuery(): string {\r\n        return null;\r\n    }\r\n\r\n    getQueryWithParameterValuesFilledIn(): string {\r\n        let query = this.query;\r\n        let queryParts: string[] = [];\r\n        let pos = 0;\r\n\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryParts.push(query.substring(pos, this.parameterPositions[i]));\r\n            pos = this.parameterPositions[i] + 1;\r\n        }\r\n\r\n        if (pos < query.length) {\r\n            queryParts.push(query.substring(pos));\r\n        }\r\n\r\n        let queryWithParameterValues = \"\";\r\n        for (let i = 0; i < this.parameterPositions.length; i++) {\r\n            queryWithParameterValues += queryParts[i] + this.parameterValues[i];\r\n        }\r\n\r\n        if (queryParts.length > this.parameterPositions.length) {\r\n            queryWithParameterValues += queryParts[queryParts.length - 1];\r\n        }\r\n\r\n        return queryWithParameterValues;\r\n    }\r\n\r\n}","import { DatabaseData, SendingStatementsMessageFromServer } from \"../../communication/Data.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { DatabaseTool, QueryResult } from \"../../tools/database/DatabaseTool.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { DatabaseLongPollingListener } from \"../../tools/database/DatabaseLongPollingListener.js\";\r\nimport { stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { PreparedStatementHelper } from \"./DatabasePreparedStatement.js\";\r\n\r\nexport class ConnectionClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Connection\", module, \"Ein Connection-Objekt repräsentiert die Verbindung zu einer Datenbank auf www.sql-ide.de\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let preparedStatementType = <Klass>module.typeStore.getType(\"PreparedStatement\");\r\n        let statementType = <Klass>module.typeStore.getType(\"Statement\");\r\n\r\n        this.addMethod(new Method(\"createStatement\", new Parameterlist([\r\n        ]), statementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(statementType);\r\n                stmt.intrinsicData[\"ConnectionHelper\"] = ch;\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein Statement-Objekt, mit dem Statements zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"prepareStatement\", new Parameterlist([\r\n            { identifier: \"query\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), preparedStatementType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let query: string = parameters[1].value;\r\n\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let stmt: RuntimeObject = new RuntimeObject(preparedStatementType);\r\n                stmt.intrinsicData[\"Helper\"] = new PreparedStatementHelper(ch, query);\r\n\r\n                return stmt;\r\n\r\n            }, false, false, 'Erstellt ein PreparedStatement-Objekt, mit dem Anweisungen zur Datenbank geschickt werden können.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ch: ConnectionHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                ch.close();\r\n\r\n            }, false, false, 'Schließt die Verbindung zur Datenbank.',\r\n            false));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ConnectionHelper {\r\n\r\n    database: DatabaseTool;\r\n    databaseData: DatabaseData;\r\n    token: string;\r\n    longPollingListener: DatabaseLongPollingListener;\r\n\r\n    constructor(private main: Main) {\r\n\r\n        main.getInterpreter().registerDatabaseConnection(this);\r\n\r\n    }\r\n\r\n    connect(code: string, callback: (error: string) => void) {\r\n        let that = this;\r\n        this.main.networkManager.fetchDatabaseAndToken(code, (dbData, token, error) => {\r\n            if (error == null) {\r\n                that.token = token;\r\n                that.databaseData = dbData;\r\n                that.database = new DatabaseTool(that.main);\r\n                that.database.initializeWorker(dbData.templateDump, dbData.statements, (error) => {\r\n\r\n                    that.longPollingListener = new DatabaseLongPollingListener(that.main.networkManager,\r\n                        that.token, (firstNewStatementIndex, newStatements, rollbackToVersion) => {\r\n                            that.onServerSentStatements(firstNewStatementIndex, newStatements, rollbackToVersion);\r\n                        })\r\n\r\n                    that.longPollingListener.longPoll();\r\n                    callback(null);\r\n                });\r\n            } else {\r\n                callback(error);\r\n            }\r\n        })\r\n    }\r\n\r\n    close() {\r\n        if (this.longPollingListener != null) {\r\n            this.longPollingListener.close();\r\n            this.longPollingListener = null;\r\n        }\r\n\r\n        if(this.database != null){\r\n            this.database.close();\r\n            this.database = null;\r\n        }\r\n\r\n    }\r\n\r\n    skipNextServerSentStatement: boolean = false;\r\n    onServerSentStatements(firstNewStatementIndex: number, newStatements: string[], rollbackToVersion: number) {\r\n\r\n        if(this.skipNextServerSentStatement){\r\n            this.skipNextServerSentStatement = false;\r\n            return;\r\n        }\r\n\r\n        if (rollbackToVersion != null) {\r\n            // Rollback\r\n            this.databaseData.statements.splice(rollbackToVersion);\r\n            this.database.initializeWorker(this.databaseData.templateDump, this.databaseData.statements);\r\n            return;\r\n        } else {\r\n            this.executeStatementsFromServer(firstNewStatementIndex, newStatements);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    executeStatementsFromServer(firstStatementIndex: number, statements: string[],\r\n        callback?: (error: string) => void) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            if(callback) callback(\"Keine Datenbankverbindung.\");\r\n            return;\r\n        }\r\n\r\n        let currentDBVersion = this.databaseData.statements.length;\r\n        let delta = currentDBVersion - firstStatementIndex + 1; // these statements are already there\r\n        if (delta >= statements.length) {\r\n            if(callback) callback(null);\r\n            return;\r\n        }\r\n        statements = statements.slice(delta);\r\n        this.databaseData.statements = this.databaseData.statements.concat(statements);\r\n\r\n        this.database.executeWriteQueries(statements, () => {\r\n            if (callback != null) callback(null);\r\n        }, (errorMessage) => {\r\n            if (callback != null) callback(errorMessage);\r\n        })\r\n    }\r\n\r\n    executeWriteStatement(query: string, callback: (error: string, lastRowId: number) => void, retrieveLastRowId: boolean = false) {\r\n\r\n        // connection already closed?\r\n        if (this.database == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", 0);\r\n        }\r\n\r\n        let that = this;\r\n        let oldStatementIndex = that.databaseData.statements.length;\r\n        this.database.executeQuery(\"explain \" + query, () => {\r\n\r\n            that.skipNextServerSentStatement = true;\r\n            that.main.networkManager.addDatabaseStatement(that.token, oldStatementIndex,\r\n                [query], (statementsBefore, new_version, errorMessage) => {\r\n                    if (errorMessage != null) {\r\n                        callback(errorMessage, 0);\r\n                        return;\r\n                    }\r\n\r\n                    that.executeStatementsFromServer(oldStatementIndex + 1, statementsBefore, (error: string) => {\r\n\r\n                        that.database.executeWriteQueries([query], () => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (!retrieveLastRowId) {\r\n                                callback(null, 0);\r\n                                return;\r\n                            }\r\n                            that.executeQuery(\"select last_insert_rowid()\", (error, data) => {\r\n                                callback(null, data.values[0][0]);\r\n                            })\r\n                        }, (errorMessage) => {\r\n                            that.databaseData.statements.push(query);\r\n                            if (callback != null) callback(errorMessage, 0);\r\n                            // try rollback so that server doesn't store this statement\r\n                            that.main.networkManager.rollbackDatabaseStatement(that.token, that.databaseData.statements.length, () => {})\r\n                        })\r\n                \r\n\r\n                    });\r\n\r\n                })\r\n\r\n        }, (error) => {\r\n            callback(error, 0);\r\n        })\r\n\r\n    }\r\n\r\n    executeQuery(query: string, callback: (error: string, data: QueryResult) => void) {\r\n\r\n        if (this.database == null || this.longPollingListener == null) {\r\n            callback(\"Es besteht keine Verbindung zur Datenbank.\", null);\r\n            return;\r\n        }\r\n\r\n        this.database.executeQuery(query, (results: QueryResult[]) => {\r\n            callback(null,results.length == 0 ? {columns: [], values: []} : results[0]);\r\n        }, (error: string) => {\r\n            callback(error, null);\r\n        })\r\n\r\n    }\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ConnectionHelper } from \"./Connection.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class DatabaseManagerClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DatabaseManager\", module, \"Über die statische Methode DatabaseManager.getConnection(String code) kann die Verbindung zu einer Datenbank auf www.sql-ide.de aufgebaut werden.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let connectionType = <Klass>module.typeStore.getType(\"Connection\");\r\n \r\n        this.addMethod(new Method(\"getConnection\", new Parameterlist([\r\n            { identifier: \"code\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), connectionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let code: string = parameters[1].value;\r\n\r\n                let main = module.main;\r\n                let interpreter = module.main.getInterpreter();\r\n                if(main.isEmbedded()){\r\n                    interpreter.throwException(\"Verbindung zu einer Datenbank kann nur von www.online-ide.de aus aufgebaut werden.\");\r\n                    return null;\r\n                }\r\n\r\n                let ch: ConnectionHelper = new ConnectionHelper(<Main>module.main);\r\n                interpreter.pauseForInput(InterpreterState.waitingForDB);\r\n                module.main.getBottomDiv().showHideDbBusyIcon(true);\r\n                ch.connect(code, (error: string) => {\r\n                    module.main.getBottomDiv().showHideDbBusyIcon(false);\r\n                    if(error == null){\r\n                        let connectionRuntimeObject = new RuntimeObject(connectionType);\r\n                        connectionRuntimeObject.intrinsicData[\"Helper\"] = ch;\r\n                        interpreter.resumeAfterInput({value: connectionRuntimeObject, type: connectionType}, true);\r\n                    } else {\r\n                        interpreter.resumeAfterInput(null);\r\n                        interpreter.throwException(error);\r\n                    }\r\n                })\r\n\r\n                return;\r\n\r\n            }, false, true, 'Baut eine Verbindung mit einer Datenbank auf www.sql-ide.de auf. Gibt ein Connection-Objekt zurück, das diese Verbindung repräsentiert.',\r\n            false));\r\n\r\n    }\r\n\r\n}","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType, longPrimitiveType, LongType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\nimport { RobotClass, RobotWorldClass } from \"../../runtimelibrary/graphics/3d/Robot.js\";\r\nimport { ResultSetClass } from \"../../runtimelibrary/database/ResultSet.js\";\r\nimport { DatabaseStatementClass } from \"../../runtimelibrary/database/DatabaseStatement.js\";\r\nimport { ConnectionClass } from \"../../runtimelibrary/database/Connection.js\";\r\nimport { DatabaseManagerClass } from \"../../runtimelibrary/database/DatabaseManager.js\";\r\nimport { DatabasePreparedStatementClass } from \"../../runtimelibrary/database/DatabasePreparedStatement.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType); \r\n        this.typeStore.addType(longPrimitiveType); \r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(LongType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n        this.typeStore.addType(new RobotWorldClass(this));\r\n        this.typeStore.addType(new RobotClass(this));\r\n\r\n        this.typeStore.addType(new ResultSetClass(this));\r\n        this.typeStore.addType(new DatabaseStatementClass(this));\r\n        this.typeStore.addType(new DatabasePreparedStatementClass(this));\r\n        this.typeStore.addType(new ConnectionClass(this));\r\n        this.typeStore.addType(new DatabaseManagerClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[],\r\n    jsonFilename?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n        if(this.config.jsonFilename == null) this.config.jsonFilename = \"workspace.json\";\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if(module == null) return;\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", this.config.jsonFilename);\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType, longPrimitiveType, LongType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n    url?: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        longPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        LongType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    async initJavaOnlineDivs() {\r\n        \r\n        let divsWithScriptLists:[JQuery<HTMLElement>, JOScript[]][] = [];\r\n\r\n        jQuery('.java-online').addClass('notranslate').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            \r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let srcAttr = $script.attr('src');\r\n                let text = $script.text().trim();\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: text\r\n                };\r\n                if(srcAttr != null) script.url = srcAttr;\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            divsWithScriptLists.push([$div, scriptList])\r\n\r\n        });\r\n\r\n        for(let dws of divsWithScriptLists){\r\n            await this.initDiv(dws[0], dws[1]);\r\n        }\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    async initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        for(let script of scriptList){\r\n            if(script.url != null){\r\n                const response = await fetch(script.url)\r\n                script.text = await response.text()\r\n            }\r\n        }\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(\"spritesheet\",  prefix + \"assets/graphics/spritesheet.json\")\r\n        .add(\"steve\", prefix +\"assets/graphics/robot/minecraft_steve/scene.gltf\")\r\n        // .add('assets/graphics/robot/minecraft_grass.png')\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}